
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.sql.Types ///

open class Types: java_swift.JavaObject {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var TypesJNIClass: jclass?

    /// public static final int java.sql.Types.ARRAY

    private static var ARRAY_FieldID: jfieldID?

    open static var ARRAY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "ARRAY", fieldType: "I", fieldCache: &ARRAY_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.BIGINT

    private static var BIGINT_FieldID: jfieldID?

    open static var BIGINT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BIGINT", fieldType: "I", fieldCache: &BIGINT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.BINARY

    private static var BINARY_FieldID: jfieldID?

    open static var BINARY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BINARY", fieldType: "I", fieldCache: &BINARY_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.BIT

    private static var BIT_FieldID: jfieldID?

    open static var BIT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BIT", fieldType: "I", fieldCache: &BIT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.BLOB

    private static var BLOB_FieldID: jfieldID?

    open static var BLOB: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BLOB", fieldType: "I", fieldCache: &BLOB_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.BOOLEAN

    private static var BOOLEAN_FieldID: jfieldID?

    open static var BOOLEAN: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BOOLEAN", fieldType: "I", fieldCache: &BOOLEAN_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.CHAR

    private static var CHAR_FieldID: jfieldID?

    open static var CHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CHAR", fieldType: "I", fieldCache: &CHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.CLOB

    private static var CLOB_FieldID: jfieldID?

    open static var CLOB: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLOB", fieldType: "I", fieldCache: &CLOB_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.DATALINK

    private static var DATALINK_FieldID: jfieldID?

    open static var DATALINK: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DATALINK", fieldType: "I", fieldCache: &DATALINK_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.DATE

    private static var DATE_FieldID: jfieldID?

    open static var DATE: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DATE", fieldType: "I", fieldCache: &DATE_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.DECIMAL

    private static var DECIMAL_FieldID: jfieldID?

    open static var DECIMAL: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DECIMAL", fieldType: "I", fieldCache: &DECIMAL_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.DISTINCT

    private static var DISTINCT_FieldID: jfieldID?

    open static var DISTINCT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DISTINCT", fieldType: "I", fieldCache: &DISTINCT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.DOUBLE

    private static var DOUBLE_FieldID: jfieldID?

    open static var DOUBLE: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DOUBLE", fieldType: "I", fieldCache: &DOUBLE_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.FLOAT

    private static var FLOAT_FieldID: jfieldID?

    open static var FLOAT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "FLOAT", fieldType: "I", fieldCache: &FLOAT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.INTEGER

    private static var INTEGER_FieldID: jfieldID?

    open static var INTEGER: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "INTEGER", fieldType: "I", fieldCache: &INTEGER_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.JAVA_OBJECT

    private static var JAVA_OBJECT_FieldID: jfieldID?

    open static var JAVA_OBJECT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "JAVA_OBJECT", fieldType: "I", fieldCache: &JAVA_OBJECT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.LONGNVARCHAR

    private static var LONGNVARCHAR_FieldID: jfieldID?

    open static var LONGNVARCHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "LONGNVARCHAR", fieldType: "I", fieldCache: &LONGNVARCHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.LONGVARBINARY

    private static var LONGVARBINARY_FieldID: jfieldID?

    open static var LONGVARBINARY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "LONGVARBINARY", fieldType: "I", fieldCache: &LONGVARBINARY_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.LONGVARCHAR

    private static var LONGVARCHAR_FieldID: jfieldID?

    open static var LONGVARCHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "LONGVARCHAR", fieldType: "I", fieldCache: &LONGVARCHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.NCHAR

    private static var NCHAR_FieldID: jfieldID?

    open static var NCHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NCHAR", fieldType: "I", fieldCache: &NCHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.NCLOB

    private static var NCLOB_FieldID: jfieldID?

    open static var NCLOB: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NCLOB", fieldType: "I", fieldCache: &NCLOB_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.NULL

    private static var NULL_FieldID: jfieldID?

    open static var NULL: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NULL", fieldType: "I", fieldCache: &NULL_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.NUMERIC

    private static var NUMERIC_FieldID: jfieldID?

    open static var NUMERIC: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NUMERIC", fieldType: "I", fieldCache: &NUMERIC_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.NVARCHAR

    private static var NVARCHAR_FieldID: jfieldID?

    open static var NVARCHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NVARCHAR", fieldType: "I", fieldCache: &NVARCHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.OTHER

    private static var OTHER_FieldID: jfieldID?

    open static var OTHER: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "OTHER", fieldType: "I", fieldCache: &OTHER_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.REAL

    private static var REAL_FieldID: jfieldID?

    open static var REAL: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "REAL", fieldType: "I", fieldCache: &REAL_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.REF

    private static var REF_FieldID: jfieldID?

    open static var REF: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "REF", fieldType: "I", fieldCache: &REF_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.REF_CURSOR

    private static var REF_CURSOR_FieldID: jfieldID?

    open static var REF_CURSOR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "REF_CURSOR", fieldType: "I", fieldCache: &REF_CURSOR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.ROWID

    private static var ROWID_FieldID: jfieldID?

    open static var ROWID: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "ROWID", fieldType: "I", fieldCache: &ROWID_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.SMALLINT

    private static var SMALLINT_FieldID: jfieldID?

    open static var SMALLINT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SMALLINT", fieldType: "I", fieldCache: &SMALLINT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.SQLXML

    private static var SQLXML_FieldID: jfieldID?

    open static var SQLXML: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SQLXML", fieldType: "I", fieldCache: &SQLXML_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.STRUCT

    private static var STRUCT_FieldID: jfieldID?

    open static var STRUCT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "STRUCT", fieldType: "I", fieldCache: &STRUCT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.TIME

    private static var TIME_FieldID: jfieldID?

    open static var TIME: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "TIME", fieldType: "I", fieldCache: &TIME_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.TIMESTAMP

    private static var TIMESTAMP_FieldID: jfieldID?

    open static var TIMESTAMP: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "TIMESTAMP", fieldType: "I", fieldCache: &TIMESTAMP_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.TIMESTAMP_WITH_TIMEZONE

    private static var TIMESTAMP_WITH_TIMEZONE_FieldID: jfieldID?

    open static var TIMESTAMP_WITH_TIMEZONE: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "TIMESTAMP_WITH_TIMEZONE", fieldType: "I", fieldCache: &TIMESTAMP_WITH_TIMEZONE_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.TIME_WITH_TIMEZONE

    private static var TIME_WITH_TIMEZONE_FieldID: jfieldID?

    open static var TIME_WITH_TIMEZONE: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "TIME_WITH_TIMEZONE", fieldType: "I", fieldCache: &TIME_WITH_TIMEZONE_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.TINYINT

    private static var TINYINT_FieldID: jfieldID?

    open static var TINYINT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "TINYINT", fieldType: "I", fieldCache: &TINYINT_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.VARBINARY

    private static var VARBINARY_FieldID: jfieldID?

    open static var VARBINARY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "VARBINARY", fieldType: "I", fieldCache: &VARBINARY_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// public static final int java.sql.Types.VARCHAR

    private static var VARCHAR_FieldID: jfieldID?

    open static var VARCHAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "VARCHAR", fieldType: "I", fieldCache: &VARCHAR_FieldID, className: "java/sql/Types", classCache: &TypesJNIClass )
            return Int(__value)
        }
    }

    /// private java.sql.Types()

}

