Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/Connection.swift:1152:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1164:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1172:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Connection.swift:1183:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4216:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4228:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4236:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4247:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4216:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4228:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4236:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4247:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:977:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:989:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:997:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1008:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:2558:15: error: overriding declaration requires an 'override' keyword
    open func setBoolean( arg0: Int, arg1: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:288:15: note: overridden declaration is here
    open func setBoolean( arg0: Int, arg1: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2569:15: error: overriding declaration requires an 'override' keyword
    open func setBoolean( _ _arg0: Int, _ _arg1: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:299:15: note: overridden declaration is here
    open func setBoolean( _ _arg0: Int, _ _arg1: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2577:15: error: overriding declaration requires an 'override' keyword
    open func setByte( arg0: Int, arg1: Int8 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:307:15: note: overridden declaration is here
    open func setByte( arg0: Int, arg1: Int8 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2588:15: error: overriding declaration requires an 'override' keyword
    open func setByte( _ _arg0: Int, _ _arg1: Int8 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:318:15: note: overridden declaration is here
    open func setByte( _ _arg0: Int, _ _arg1: Int8 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2596:15: error: overriding declaration requires an 'override' keyword
    open func setShort( arg0: Int, arg1: Int16 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:326:15: note: overridden declaration is here
    open func setShort( arg0: Int, arg1: Int16 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2607:15: error: overriding declaration requires an 'override' keyword
    open func setShort( _ _arg0: Int, _ _arg1: Int16 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:337:15: note: overridden declaration is here
    open func setShort( _ _arg0: Int, _ _arg1: Int16 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2615:15: error: overriding declaration requires an 'override' keyword
    open func setInt( arg0: Int, arg1: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:345:15: note: overridden declaration is here
    open func setInt( arg0: Int, arg1: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2626:15: error: overriding declaration requires an 'override' keyword
    open func setInt( _ _arg0: Int, _ _arg1: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:356:15: note: overridden declaration is here
    open func setInt( _ _arg0: Int, _ _arg1: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2634:15: error: overriding declaration requires an 'override' keyword
    open func setLong( arg0: Int, arg1: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:364:15: note: overridden declaration is here
    open func setLong( arg0: Int, arg1: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2645:15: error: overriding declaration requires an 'override' keyword
    open func setLong( _ _arg0: Int, _ _arg1: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:375:15: note: overridden declaration is here
    open func setLong( _ _arg0: Int, _ _arg1: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2653:15: error: overriding declaration requires an 'override' keyword
    open func setFloat( arg0: Int, arg1: Float ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:383:15: note: overridden declaration is here
    open func setFloat( arg0: Int, arg1: Float ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2664:15: error: overriding declaration requires an 'override' keyword
    open func setFloat( _ _arg0: Int, _ _arg1: Float ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:394:15: note: overridden declaration is here
    open func setFloat( _ _arg0: Int, _ _arg1: Float ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2672:15: error: overriding declaration requires an 'override' keyword
    open func setDouble( arg0: Int, arg1: Double ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:402:15: note: overridden declaration is here
    open func setDouble( arg0: Int, arg1: Double ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2683:15: error: overriding declaration requires an 'override' keyword
    open func setDouble( _ _arg0: Int, _ _arg1: Double ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:413:15: note: overridden declaration is here
    open func setDouble( _ _arg0: Int, _ _arg1: Double ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2691:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( arg0: Int, arg1: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:421:15: note: overridden declaration is here
    open func setTimestamp( arg0: Int, arg1: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2702:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( _ _arg0: Int, _ _arg1: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:432:15: note: overridden declaration is here
    open func setTimestamp( _ _arg0: Int, _ _arg1: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2710:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( arg0: Int, arg1: Timestamp?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:440:15: note: overridden declaration is here
    open func setTimestamp( arg0: Int, arg1: Timestamp?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2722:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( _ _arg0: Int, _ _arg1: Timestamp?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:452:15: note: overridden declaration is here
    open func setTimestamp( _ _arg0: Int, _ _arg1: Timestamp?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2730:15: error: overriding declaration requires an 'override' keyword
    open func setURL( arg0: Int, arg1: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:460:15: note: overridden declaration is here
    open func setURL( arg0: Int, arg1: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2741:15: error: overriding declaration requires an 'override' keyword
    open func setURL( _ _arg0: Int, _ _arg1: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:471:15: note: overridden declaration is here
    open func setURL( _ _arg0: Int, _ _arg1: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2749:15: error: overriding declaration requires an 'override' keyword
    open func setTime( arg0: Int, arg1: Time?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:479:15: note: overridden declaration is here
    open func setTime( arg0: Int, arg1: Time?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2761:15: error: overriding declaration requires an 'override' keyword
    open func setTime( _ _arg0: Int, _ _arg1: Time?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:491:15: note: overridden declaration is here
    open func setTime( _ _arg0: Int, _ _arg1: Time?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2769:15: error: overriding declaration requires an 'override' keyword
    open func setTime( arg0: Int, arg1: Time? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:499:15: note: overridden declaration is here
    open func setTime( arg0: Int, arg1: Time? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2780:15: error: overriding declaration requires an 'override' keyword
    open func setTime( _ _arg0: Int, _ _arg1: Time? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:510:15: note: overridden declaration is here
    open func setTime( _ _arg0: Int, _ _arg1: Time? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2788:15: error: overriding declaration requires an 'override' keyword
    open func setDate( arg0: Int, arg1: Date? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:518:15: note: overridden declaration is here
    open func setDate( arg0: Int, arg1: Date? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2799:15: error: overriding declaration requires an 'override' keyword
    open func setDate( _ _arg0: Int, _ _arg1: Date? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:529:15: note: overridden declaration is here
    open func setDate( _ _arg0: Int, _ _arg1: Date? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2807:15: error: overriding declaration requires an 'override' keyword
    open func setDate( arg0: Int, arg1: Date?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:537:15: note: overridden declaration is here
    open func setDate( arg0: Int, arg1: Date?, arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2819:15: error: overriding declaration requires an 'override' keyword
    open func setDate( _ _arg0: Int, _ _arg1: Date?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:549:15: note: overridden declaration is here
    open func setDate( _ _arg0: Int, _ _arg1: Date?, _ _arg2: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2858:15: error: overriding declaration requires an 'override' keyword
    open func setBytes( arg0: Int, arg1: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:588:15: note: overridden declaration is here
    open func setBytes( arg0: Int, arg1: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2869:15: error: overriding declaration requires an 'override' keyword
    open func setBytes( _ _arg0: Int, _ _arg1: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:599:15: note: overridden declaration is here
    open func setBytes( _ _arg0: Int, _ _arg1: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2877:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:607:15: note: overridden declaration is here
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2888:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:618:15: note: overridden declaration is here
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2896:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:626:15: note: overridden declaration is here
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2908:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:638:15: note: overridden declaration is here
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2916:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:646:15: note: overridden declaration is here
    open func setBinaryStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2928:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:658:15: note: overridden declaration is here
    open func setBinaryStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2936:15: error: overriding declaration requires an 'override' keyword
    open func setNull( arg0: Int, arg1: Int, arg2: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:666:15: note: overridden declaration is here
    open func setNull( arg0: Int, arg1: Int, arg2: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2948:15: error: overriding declaration requires an 'override' keyword
    open func setNull( _ _arg0: Int, _ _arg1: Int, _ _arg2: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:678:15: note: overridden declaration is here
    open func setNull( _ _arg0: Int, _ _arg1: Int, _ _arg2: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2956:15: error: overriding declaration requires an 'override' keyword
    open func setNull( arg0: Int, arg1: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:686:15: note: overridden declaration is here
    open func setNull( arg0: Int, arg1: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2967:15: error: overriding declaration requires an 'override' keyword
    open func setNull( _ _arg0: Int, _ _arg1: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:697:15: note: overridden declaration is here
    open func setNull( _ _arg0: Int, _ _arg1: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2975:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( arg0: Int, arg1: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:705:15: note: overridden declaration is here
    open func setBigDecimal( arg0: Int, arg1: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2986:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( _ _arg0: Int, _ _arg1: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:716:15: note: overridden declaration is here
    open func setBigDecimal( _ _arg0: Int, _ _arg1: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2994:15: error: overriding declaration requires an 'override' keyword
    open func setString( arg0: Int, arg1: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:724:15: note: overridden declaration is here
    open func setString( arg0: Int, arg1: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3005:15: error: overriding declaration requires an 'override' keyword
    open func setString( _ _arg0: Int, _ _arg1: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:735:15: note: overridden declaration is here
    open func setString( _ _arg0: Int, _ _arg1: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3013:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:743:15: note: overridden declaration is here
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3025:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:755:15: note: overridden declaration is here
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3033:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:763:15: note: overridden declaration is here
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3045:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:775:15: note: overridden declaration is here
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3053:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:783:15: note: overridden declaration is here
    open func setAsciiStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3064:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:794:15: note: overridden declaration is here
    open func setAsciiStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3072:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:802:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3083:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:813:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3091:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:821:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3103:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:833:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3111:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: Int, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:841:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: Int, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3124:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: Int, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:854:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: Int, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3132:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:862:15: note: overridden declaration is here
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3144:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:874:15: note: overridden declaration is here
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3152:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:882:15: note: overridden declaration is here
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3164:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:894:15: note: overridden declaration is here
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3172:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:902:15: note: overridden declaration is here
    open func setCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3183:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:913:15: note: overridden declaration is here
    open func setCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3191:15: error: overriding declaration requires an 'override' keyword
    open func setRowId( arg0: Int, arg1: RowId? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:921:15: note: overridden declaration is here
    open func setRowId( arg0: Int, arg1: RowId? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3202:15: error: overriding declaration requires an 'override' keyword
    open func setRowId( _ _arg0: Int, _ _arg1: RowId? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:932:15: note: overridden declaration is here
    open func setRowId( _ _arg0: Int, _ _arg1: RowId? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3210:15: error: overriding declaration requires an 'override' keyword
    open func setNString( arg0: Int, arg1: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:940:15: note: overridden declaration is here
    open func setNString( arg0: Int, arg1: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3221:15: error: overriding declaration requires an 'override' keyword
    open func setNString( _ _arg0: Int, _ _arg1: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:951:15: note: overridden declaration is here
    open func setNString( _ _arg0: Int, _ _arg1: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3229:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:959:15: note: overridden declaration is here
    open func setNCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3241:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:971:15: note: overridden declaration is here
    open func setNCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3249:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:979:15: note: overridden declaration is here
    open func setNCharacterStream( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3260:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:990:15: note: overridden declaration is here
    open func setNCharacterStream( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3268:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( arg0: Int, arg1: NClob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:998:15: note: overridden declaration is here
    open func setNClob( arg0: Int, arg1: NClob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3279:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _arg0: Int, _ _arg1: NClob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1009:15: note: overridden declaration is here
    open func setNClob( _ _arg0: Int, _ _arg1: NClob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3287:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1017:15: note: overridden declaration is here
    open func setNClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3299:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1029:15: note: overridden declaration is here
    open func setNClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3307:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1037:15: note: overridden declaration is here
    open func setNClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3318:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1048:15: note: overridden declaration is here
    open func setNClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3326:15: error: overriding declaration requires an 'override' keyword
    open func setClob( arg0: Int, arg1: Clob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1056:15: note: overridden declaration is here
    open func setClob( arg0: Int, arg1: Clob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3337:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _arg0: Int, _ _arg1: Clob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1067:15: note: overridden declaration is here
    open func setClob( _ _arg0: Int, _ _arg1: Clob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3345:15: error: overriding declaration requires an 'override' keyword
    open func setClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1075:15: note: overridden declaration is here
    open func setClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3357:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1087:15: note: overridden declaration is here
    open func setClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3365:15: error: overriding declaration requires an 'override' keyword
    open func setClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1095:15: note: overridden declaration is here
    open func setClob( arg0: Int, arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3376:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1106:15: note: overridden declaration is here
    open func setClob( _ _arg0: Int, _ _arg1: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3384:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( arg0: Int, arg1: Blob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1114:15: note: overridden declaration is here
    open func setBlob( arg0: Int, arg1: Blob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3395:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _arg0: Int, _ _arg1: Blob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1125:15: note: overridden declaration is here
    open func setBlob( _ _arg0: Int, _ _arg1: Blob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3403:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1133:15: note: overridden declaration is here
    open func setBlob( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3415:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1145:15: note: overridden declaration is here
    open func setBlob( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3423:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1153:15: note: overridden declaration is here
    open func setBlob( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3434:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1164:15: note: overridden declaration is here
    open func setBlob( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3442:15: error: overriding declaration requires an 'override' keyword
    open func setSQLXML( arg0: Int, arg1: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1172:15: note: overridden declaration is here
    open func setSQLXML( arg0: Int, arg1: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3453:15: error: overriding declaration requires an 'override' keyword
    open func setSQLXML( _ _arg0: Int, _ _arg1: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1183:15: note: overridden declaration is here
    open func setSQLXML( _ _arg0: Int, _ _arg1: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1353:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:332:15: note: overridden declaration is here
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1364:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:343:15: note: overridden declaration is here
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1372:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:351:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1384:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:363:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1392:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:371:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1404:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:383:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1412:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:391:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1424:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:403:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:2827:15: error: overriding declaration requires an 'override' keyword
    open func execute() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:557:15: note: overridden declaration is here
    open func execute() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3623:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1353:15: note: overridden declaration is here
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3634:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1364:15: note: overridden declaration is here
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3642:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1372:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3654:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1384:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3662:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1392:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3674:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1404:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3682:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1412:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3694:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1424:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:2842:15: error: overriding declaration requires an 'override' keyword
    open func getMetaData() throws /* java.sql.SQLException */ -> ResultSetMetaData! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:572:15: note: overridden declaration is here
    open func getMetaData() throws /* java.sql.SQLException */ -> ResultSetMetaData! {
              ^
java_sql/Sources/PreparedStatement.swift:1544:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:523:15: note: overridden declaration is here
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1556:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:535:15: note: overridden declaration is here
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:3461:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1191:15: note: overridden declaration is here
    open func executeQuery() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:3814:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1544:15: note: overridden declaration is here
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:3826:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1556:15: note: overridden declaration is here
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1564:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:543:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1576:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:555:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1584:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:563:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1596:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:575:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1604:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:583:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1616:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:595:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1624:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:603:15: note: overridden declaration is here
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1635:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:614:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3477:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1207:15: note: overridden declaration is here
    open func executeUpdate() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3834:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1564:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3846:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1576:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3854:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1584:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3866:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1596:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3874:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1604:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3886:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1616:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3894:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1624:15: note: overridden declaration is here
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3905:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1635:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3492:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1222:15: note: overridden declaration is here
    open func setUnicodeStream( arg0: Int, arg1: /* java.io.InputStream */ UnavailableObject?, arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3504:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1234:15: note: overridden declaration is here
    open func setUnicodeStream( _ _arg0: Int, _ _arg1: /* java.io.InputStream */ UnavailableObject?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3512:15: error: overriding declaration requires an 'override' keyword
    open func clearParameters() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1242:15: note: overridden declaration is here
    open func clearParameters() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1643:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:622:15: note: overridden declaration is here
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1653:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:632:15: note: overridden declaration is here
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3526:15: error: overriding declaration requires an 'override' keyword
    open func addBatch() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1256:15: note: overridden declaration is here
    open func addBatch() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3913:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1643:15: note: overridden declaration is here
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3923:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1653:15: note: overridden declaration is here
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3540:15: error: overriding declaration requires an 'override' keyword
    open func setRef( arg0: Int, arg1: Ref? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1270:15: note: overridden declaration is here
    open func setRef( arg0: Int, arg1: Ref? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3551:15: error: overriding declaration requires an 'override' keyword
    open func setRef( _ _arg0: Int, _ _arg1: Ref? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1281:15: note: overridden declaration is here
    open func setRef( _ _arg0: Int, _ _arg1: Ref? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3559:15: error: overriding declaration requires an 'override' keyword
    open func setArray( arg0: Int, arg1: Array? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1289:15: note: overridden declaration is here
    open func setArray( arg0: Int, arg1: Array? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3570:15: error: overriding declaration requires an 'override' keyword
    open func setArray( _ _arg0: Int, _ _arg1: Array? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1300:15: note: overridden declaration is here
    open func setArray( _ _arg0: Int, _ _arg1: Array? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3578:15: error: overriding declaration requires an 'override' keyword
    open func getParameterMetaData() throws /* java.sql.SQLException */ -> ParameterMetaData! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1308:15: note: overridden declaration is here
    open func getParameterMetaData() throws /* java.sql.SQLException */ -> ParameterMetaData! {
              ^
java_sql/Sources/PreparedStatement.swift:1324:15: error: overriding declaration requires an 'override' keyword
    open func close() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:303:15: note: overridden declaration is here
    open func close() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3594:15: error: overriding declaration requires an 'override' keyword
    open func close() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1324:15: note: overridden declaration is here
    open func close() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1338:15: error: overriding declaration requires an 'override' keyword
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:317:15: note: overridden declaration is here
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3608:15: error: overriding declaration requires an 'override' keyword
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1338:15: note: overridden declaration is here
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1432:15: error: overriding declaration requires an 'override' keyword
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:411:15: note: overridden declaration is here
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:3702:15: error: overriding declaration requires an 'override' keyword
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1432:15: note: overridden declaration is here
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1448:15: error: overriding declaration requires an 'override' keyword
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
         override 
java_sql/Sources/Statement.swift:427:15: note: overridden declaration is here
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
java_sql/Sources/CallableStatement.swift:3718:15: error: overriding declaration requires an 'override' keyword
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1448:15: note: overridden declaration is here
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
java_sql/Sources/PreparedStatement.swift:1464:15: error: overriding declaration requires an 'override' keyword
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:443:15: note: overridden declaration is here
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3734:15: error: overriding declaration requires an 'override' keyword
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1464:15: note: overridden declaration is here
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1478:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:457:15: note: overridden declaration is here
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1488:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:467:15: note: overridden declaration is here
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3748:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1478:15: note: overridden declaration is here
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3758:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1488:15: note: overridden declaration is here
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1496:15: error: overriding declaration requires an 'override' keyword
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:475:15: note: overridden declaration is here
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3766:15: error: overriding declaration requires an 'override' keyword
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1496:15: note: overridden declaration is here
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1511:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:490:15: note: overridden declaration is here
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1521:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:500:15: note: overridden declaration is here
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3781:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1511:15: note: overridden declaration is here
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3791:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1521:15: note: overridden declaration is here
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1529:15: error: overriding declaration requires an 'override' keyword
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:508:15: note: overridden declaration is here
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3799:15: error: overriding declaration requires an 'override' keyword
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1529:15: note: overridden declaration is here
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1661:15: error: overriding declaration requires an 'override' keyword
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:640:15: note: overridden declaration is here
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3931:15: error: overriding declaration requires an 'override' keyword
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1661:15: note: overridden declaration is here
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1676:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:655:15: note: overridden declaration is here
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1686:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:665:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3946:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1676:15: note: overridden declaration is here
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3956:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1686:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1694:15: error: overriding declaration requires an 'override' keyword
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:673:15: note: overridden declaration is here
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3964:15: error: overriding declaration requires an 'override' keyword
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1694:15: note: overridden declaration is here
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1709:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:688:15: note: overridden declaration is here
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1719:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:698:15: note: overridden declaration is here
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3979:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1709:15: note: overridden declaration is here
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3989:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1719:15: note: overridden declaration is here
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1727:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:706:15: note: overridden declaration is here
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1737:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:716:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3997:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1727:15: note: overridden declaration is here
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4007:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1737:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1745:15: error: overriding declaration requires an 'override' keyword
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:724:15: note: overridden declaration is here
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4015:15: error: overriding declaration requires an 'override' keyword
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1745:15: note: overridden declaration is here
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1760:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:739:15: note: overridden declaration is here
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1770:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:749:15: note: overridden declaration is here
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4030:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1760:15: note: overridden declaration is here
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4040:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1770:15: note: overridden declaration is here
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1778:15: error: overriding declaration requires an 'override' keyword
    open func cancel() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:757:15: note: overridden declaration is here
    open func cancel() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4048:15: error: overriding declaration requires an 'override' keyword
    open func cancel() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1778:15: note: overridden declaration is here
    open func cancel() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1792:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:771:15: note: overridden declaration is here
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1802:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:781:15: note: overridden declaration is here
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4062:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1792:15: note: overridden declaration is here
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4072:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1802:15: note: overridden declaration is here
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1810:15: error: overriding declaration requires an 'override' keyword
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:789:15: note: overridden declaration is here
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4080:15: error: overriding declaration requires an 'override' keyword
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1810:15: note: overridden declaration is here
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1825:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:804:15: note: overridden declaration is here
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1836:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:815:15: note: overridden declaration is here
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1844:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:823:15: note: overridden declaration is here
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4095:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1825:15: note: overridden declaration is here
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4106:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1836:15: note: overridden declaration is here
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4114:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1844:15: note: overridden declaration is here
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1859:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:838:15: note: overridden declaration is here
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4129:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1859:15: note: overridden declaration is here
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1874:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:853:15: note: overridden declaration is here
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4144:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1874:15: note: overridden declaration is here
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1889:15: error: overriding declaration requires an 'override' keyword
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:868:15: note: overridden declaration is here
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4159:15: error: overriding declaration requires an 'override' keyword
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1889:15: note: overridden declaration is here
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1903:15: error: overriding declaration requires an 'override' keyword
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
         override 
java_sql/Sources/Statement.swift:882:15: note: overridden declaration is here
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
java_sql/Sources/CallableStatement.swift:4173:15: error: overriding declaration requires an 'override' keyword
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1903:15: note: overridden declaration is here
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
java_sql/Sources/PreparedStatement.swift:1918:15: error: overriding declaration requires an 'override' keyword
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
         override 
java_sql/Sources/Statement.swift:897:15: note: overridden declaration is here
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
java_sql/Sources/CallableStatement.swift:4188:15: error: overriding declaration requires an 'override' keyword
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1918:15: note: overridden declaration is here
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
java_sql/Sources/PreparedStatement.swift:1934:15: error: overriding declaration requires an 'override' keyword
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:913:15: note: overridden declaration is here
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:4204:15: error: overriding declaration requires an 'override' keyword
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1934:15: note: overridden declaration is here
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1950:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:929:15: note: overridden declaration is here
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4220:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1950:15: note: overridden declaration is here
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1965:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:944:15: note: overridden declaration is here
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1975:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:954:15: note: overridden declaration is here
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4235:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1965:15: note: overridden declaration is here
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4245:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1975:15: note: overridden declaration is here
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1983:15: error: overriding declaration requires an 'override' keyword
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:962:15: note: overridden declaration is here
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4253:15: error: overriding declaration requires an 'override' keyword
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1983:15: note: overridden declaration is here
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:977:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:989:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:1998:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:977:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2010:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:989:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4268:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1998:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4280:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2010:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:997:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1008:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2018:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:997:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2029:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1008:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4288:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2018:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4299:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2029:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1353:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:332:15: note: overridden declaration is here
    open func execute( arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1364:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:343:15: note: overridden declaration is here
    open func execute( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1372:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:351:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1384:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:363:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1392:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:371:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1404:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:383:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1412:15: error: overriding declaration requires an 'override' keyword
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:391:15: note: overridden declaration is here
    open func execute( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1424:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:403:15: note: overridden declaration is here
    open func execute( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1544:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:523:15: note: overridden declaration is here
    open func executeQuery( arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1556:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:535:15: note: overridden declaration is here
    open func executeQuery( _ _arg0: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1564:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:543:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1576:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:555:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1584:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:563:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1596:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:575:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1604:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:583:15: note: overridden declaration is here
    open func executeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1616:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:595:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1624:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:603:15: note: overridden declaration is here
    open func executeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1635:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:614:15: note: overridden declaration is here
    open func executeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1643:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:622:15: note: overridden declaration is here
    open func addBatch( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1653:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:632:15: note: overridden declaration is here
    open func addBatch( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1324:15: error: overriding declaration requires an 'override' keyword
    open func close() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:303:15: note: overridden declaration is here
    open func close() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1338:15: error: overriding declaration requires an 'override' keyword
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:317:15: note: overridden declaration is here
    open func isClosed() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1432:15: error: overriding declaration requires an 'override' keyword
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:411:15: note: overridden declaration is here
    open func getResultSet() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1448:15: error: overriding declaration requires an 'override' keyword
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
         override 
java_sql/Sources/Statement.swift:427:15: note: overridden declaration is here
    open func getWarnings() throws /* java.sql.SQLException */ -> SQLWarning! {
              ^
java_sql/Sources/PreparedStatement.swift:1464:15: error: overriding declaration requires an 'override' keyword
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:443:15: note: overridden declaration is here
    open func clearWarnings() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1478:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:457:15: note: overridden declaration is here
    open func setFetchDirection( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1488:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:467:15: note: overridden declaration is here
    open func setFetchDirection( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1496:15: error: overriding declaration requires an 'override' keyword
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:475:15: note: overridden declaration is here
    open func getFetchDirection() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1511:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:490:15: note: overridden declaration is here
    open func setFetchSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1521:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:500:15: note: overridden declaration is here
    open func setFetchSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1529:15: error: overriding declaration requires an 'override' keyword
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:508:15: note: overridden declaration is here
    open func getFetchSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1661:15: error: overriding declaration requires an 'override' keyword
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:640:15: note: overridden declaration is here
    open func getMaxFieldSize() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1676:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:655:15: note: overridden declaration is here
    open func setMaxFieldSize( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1686:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:665:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1694:15: error: overriding declaration requires an 'override' keyword
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:673:15: note: overridden declaration is here
    open func getMaxRows() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1709:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:688:15: note: overridden declaration is here
    open func setMaxRows( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1719:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:698:15: note: overridden declaration is here
    open func setMaxRows( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1727:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:706:15: note: overridden declaration is here
    open func setEscapeProcessing( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1737:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:716:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1745:15: error: overriding declaration requires an 'override' keyword
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:724:15: note: overridden declaration is here
    open func getQueryTimeout() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1760:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:739:15: note: overridden declaration is here
    open func setQueryTimeout( arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1770:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:749:15: note: overridden declaration is here
    open func setQueryTimeout( _ _arg0: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1778:15: error: overriding declaration requires an 'override' keyword
    open func cancel() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:757:15: note: overridden declaration is here
    open func cancel() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1792:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:771:15: note: overridden declaration is here
    open func setCursorName( arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1802:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:781:15: note: overridden declaration is here
    open func setCursorName( _ _arg0: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1810:15: error: overriding declaration requires an 'override' keyword
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:789:15: note: overridden declaration is here
    open func getUpdateCount() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1825:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:804:15: note: overridden declaration is here
    open func getMoreResults( arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1836:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:815:15: note: overridden declaration is here
    open func getMoreResults( _ _arg0: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1844:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:823:15: note: overridden declaration is here
    open func getMoreResults() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1859:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:838:15: note: overridden declaration is here
    open func getResultSetConcurrency() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1874:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:853:15: note: overridden declaration is here
    open func getResultSetType() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1889:15: error: overriding declaration requires an 'override' keyword
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:868:15: note: overridden declaration is here
    open func clearBatch() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1903:15: error: overriding declaration requires an 'override' keyword
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
         override 
java_sql/Sources/Statement.swift:882:15: note: overridden declaration is here
    open func executeBatch() throws /* java.sql.SQLException */ -> [Int32]! {
              ^
java_sql/Sources/PreparedStatement.swift:1918:15: error: overriding declaration requires an 'override' keyword
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
         override 
java_sql/Sources/Statement.swift:897:15: note: overridden declaration is here
    open func getConnection() throws /* java.sql.SQLException */ -> Connection! {
              ^
java_sql/Sources/PreparedStatement.swift:1934:15: error: overriding declaration requires an 'override' keyword
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:913:15: note: overridden declaration is here
    open func getGeneratedKeys() throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1950:15: error: overriding declaration requires an 'override' keyword
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:929:15: note: overridden declaration is here
    open func getResultSetHoldability() throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1965:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:944:15: note: overridden declaration is here
    open func setPoolable( arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1975:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:954:15: note: overridden declaration is here
    open func setPoolable( _ _arg0: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1983:15: error: overriding declaration requires an 'override' keyword
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:962:15: note: overridden declaration is here
    open func isPoolable() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:977:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:989:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:1998:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:977:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2010:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:989:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:997:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1008:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2018:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:997:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2029:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1008:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSetMetaData.swift:563:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:575:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:583:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:594:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:335:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:347:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:355:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:366:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:335:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:347:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:355:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:366:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4448:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4460:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4468:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4479:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:335:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:347:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:355:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:366:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4448:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4460:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4468:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4479:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:563:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:29:15: note: overridden declaration is here
    open func unwrap( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:575:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:41:15: note: overridden declaration is here
    open func unwrap( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:583:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:49:15: note: overridden declaration is here
    open func isWrapperFor( arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:594:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:60:15: note: overridden declaration is here
    open func isWrapperFor( _ _arg0: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/Connection.swift:1265:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1277:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1285:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Connection.swift:1296:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Date.swift:141:15: error: overriding declaration requires an 'override' keyword
    open func setTime( _ _date: Int64 ) {
              ^
         override 
java_util.Date:58:15: note: overridden declaration is here
    open func setTime(_ _time: Int64)
              ^
java_sql/Sources/Date.swift:158:15: error: overriding declaration requires an 'override' keyword
    open func setHours( _ _i: Int ) {
              ^
         override 
java_util.Date:46:15: note: overridden declaration is here
    open func setHours(_ _hours: Int)
              ^
java_sql/Sources/Date.swift:175:15: error: overriding declaration requires an 'override' keyword
    open func setMinutes( _ _i: Int ) {
              ^
         override 
java_util.Date:49:15: note: overridden declaration is here
    open func setMinutes(_ _minutes: Int)
              ^
java_sql/Sources/Date.swift:192:15: error: overriding declaration requires an 'override' keyword
    open func setSeconds( _ _i: Int ) {
              ^
         override 
java_util.Date:52:15: note: overridden declaration is here
    open func setSeconds(_ _seconds: Int)
              ^
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:4375:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4387:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4395:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4406:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/Timestamp.swift:117:15: error: overriding declaration requires an 'override' keyword
    open func equals( _ _ts: java_lang.JavaObject? ) -> Bool {
              ^
         override 
java_util.Date:19:24: note: overridden declaration is here
    override open func equals(_ _obj: java_lang.JavaObject?) -> Bool
                       ^
java_sql/Sources/Timestamp.swift:153:15: error: overriding declaration requires an 'override' keyword
    open func compareTo( _ _o: java_lang.JavaObject? ) -> Int {
              ^
         override 
java_util.Date:22:15: note: overridden declaration is here
    open func compareTo(_ _arg0: java_lang.JavaObject?) -> Int
              ^
java_sql/Sources/Timestamp.swift:169:15: error: overriding declaration requires an 'override' keyword
    open func compareTo( _ _o: java_util.Date? ) -> Int {
              ^
         override 
java_util.Date:24:15: note: overridden declaration is here
    open func compareTo(_ _anotherDate: java_util.Date?) -> Int
              ^
java_sql/Sources/Timestamp.swift:211:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:27:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:220:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:28:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/Statement.swift:1198:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1210:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1218:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1229:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:2829:15: error: overriding declaration requires an 'override' keyword
    open func setBoolean( parameterIndex: Int, x: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:322:15: note: overridden declaration is here
    open func setBoolean( parameterIndex: Int, x: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2840:15: error: overriding declaration requires an 'override' keyword
    open func setBoolean( _ _parameterIndex: Int, _ _x: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:333:15: note: overridden declaration is here
    open func setBoolean( _ _parameterIndex: Int, _ _x: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2848:15: error: overriding declaration requires an 'override' keyword
    open func setByte( parameterIndex: Int, x: Int8 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:341:15: note: overridden declaration is here
    open func setByte( parameterIndex: Int, x: Int8 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2859:15: error: overriding declaration requires an 'override' keyword
    open func setByte( _ _parameterIndex: Int, _ _x: Int8 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:352:15: note: overridden declaration is here
    open func setByte( _ _parameterIndex: Int, _ _x: Int8 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2867:15: error: overriding declaration requires an 'override' keyword
    open func setShort( parameterIndex: Int, x: Int16 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:360:15: note: overridden declaration is here
    open func setShort( parameterIndex: Int, x: Int16 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2878:15: error: overriding declaration requires an 'override' keyword
    open func setShort( _ _parameterIndex: Int, _ _x: Int16 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:371:15: note: overridden declaration is here
    open func setShort( _ _parameterIndex: Int, _ _x: Int16 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2886:15: error: overriding declaration requires an 'override' keyword
    open func setInt( parameterIndex: Int, x: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:379:15: note: overridden declaration is here
    open func setInt( parameterIndex: Int, x: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2897:15: error: overriding declaration requires an 'override' keyword
    open func setInt( _ _parameterIndex: Int, _ _x: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:390:15: note: overridden declaration is here
    open func setInt( _ _parameterIndex: Int, _ _x: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2905:15: error: overriding declaration requires an 'override' keyword
    open func setLong( parameterIndex: Int, x: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:398:15: note: overridden declaration is here
    open func setLong( parameterIndex: Int, x: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2916:15: error: overriding declaration requires an 'override' keyword
    open func setLong( _ _parameterIndex: Int, _ _x: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:409:15: note: overridden declaration is here
    open func setLong( _ _parameterIndex: Int, _ _x: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2924:15: error: overriding declaration requires an 'override' keyword
    open func setFloat( parameterIndex: Int, x: Float ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:417:15: note: overridden declaration is here
    open func setFloat( parameterIndex: Int, x: Float ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2935:15: error: overriding declaration requires an 'override' keyword
    open func setFloat( _ _parameterIndex: Int, _ _x: Float ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:428:15: note: overridden declaration is here
    open func setFloat( _ _parameterIndex: Int, _ _x: Float ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2943:15: error: overriding declaration requires an 'override' keyword
    open func setDouble( parameterIndex: Int, x: Double ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:436:15: note: overridden declaration is here
    open func setDouble( parameterIndex: Int, x: Double ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2954:15: error: overriding declaration requires an 'override' keyword
    open func setDouble( _ _parameterIndex: Int, _ _x: Double ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:447:15: note: overridden declaration is here
    open func setDouble( _ _parameterIndex: Int, _ _x: Double ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2962:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( parameterIndex: Int, x: Timestamp?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:455:15: note: overridden declaration is here
    open func setTimestamp( parameterIndex: Int, x: Timestamp?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2974:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( _ _parameterIndex: Int, _ _x: Timestamp?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:467:15: note: overridden declaration is here
    open func setTimestamp( _ _parameterIndex: Int, _ _x: Timestamp?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2982:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( parameterIndex: Int, x: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:475:15: note: overridden declaration is here
    open func setTimestamp( parameterIndex: Int, x: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2993:15: error: overriding declaration requires an 'override' keyword
    open func setTimestamp( _ _parameterIndex: Int, _ _x: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:486:15: note: overridden declaration is here
    open func setTimestamp( _ _parameterIndex: Int, _ _x: Timestamp? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3001:15: error: overriding declaration requires an 'override' keyword
    open func setBytes( parameterIndex: Int, x: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:494:15: note: overridden declaration is here
    open func setBytes( parameterIndex: Int, x: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3012:15: error: overriding declaration requires an 'override' keyword
    open func setBytes( _ _parameterIndex: Int, _ _x: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:505:15: note: overridden declaration is here
    open func setBytes( _ _parameterIndex: Int, _ _x: [Int8]? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3020:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:513:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3031:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:524:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3039:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:532:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3051:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:544:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3059:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:552:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3071:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:564:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:3079:15: error: overriding declaration requires an 'override' keyword
    open func setNull( parameterIndex: Int, sqlType: Int, typeName: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:572:15: note: overridden declaration is here
    open func setNull( parameterIndex: Int, sqlType: Int, typeName: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3091:15: error: overriding declaration requires an 'override' keyword
    open func setNull( _ _parameterIndex: Int, _ _sqlType: Int, _ _typeName: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:584:15: note: overridden declaration is here
    open func setNull( _ _parameterIndex: Int, _ _sqlType: Int, _ _typeName: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3099:15: error: overriding declaration requires an 'override' keyword
    open func setNull( parameterIndex: Int, sqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:592:15: note: overridden declaration is here
    open func setNull( parameterIndex: Int, sqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3110:15: error: overriding declaration requires an 'override' keyword
    open func setNull( _ _parameterIndex: Int, _ _sqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:603:15: note: overridden declaration is here
    open func setNull( _ _parameterIndex: Int, _ _sqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3118:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( parameterIndex: Int, x: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:611:15: note: overridden declaration is here
    open func setBigDecimal( parameterIndex: Int, x: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3129:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:622:15: note: overridden declaration is here
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3137:15: error: overriding declaration requires an 'override' keyword
    open func setString( parameterIndex: Int, x: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:630:15: note: overridden declaration is here
    open func setString( parameterIndex: Int, x: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3148:15: error: overriding declaration requires an 'override' keyword
    open func setString( _ _parameterIndex: Int, _ _x: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:641:15: note: overridden declaration is here
    open func setString( _ _parameterIndex: Int, _ _x: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3156:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:649:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3167:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:660:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3175:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:668:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3187:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:680:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3195:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:688:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3207:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:700:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3215:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:708:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3227:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:720:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3235:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:728:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3246:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:739:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3254:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:747:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3266:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:759:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3274:15: error: overriding declaration requires an 'override' keyword
    open func setRowId( parameterIndex: Int, x: RowId? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:767:15: note: overridden declaration is here
    open func setRowId( parameterIndex: Int, x: RowId? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3285:15: error: overriding declaration requires an 'override' keyword
    open func setRowId( _ _parameterIndex: Int, _ _x: RowId? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:778:15: note: overridden declaration is here
    open func setRowId( _ _parameterIndex: Int, _ _x: RowId? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3293:15: error: overriding declaration requires an 'override' keyword
    open func setNString( parameterIndex: Int, value: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:786:15: note: overridden declaration is here
    open func setNString( parameterIndex: Int, value: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3304:15: error: overriding declaration requires an 'override' keyword
    open func setNString( _ _parameterIndex: Int, _ _value: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:797:15: note: overridden declaration is here
    open func setNString( _ _parameterIndex: Int, _ _value: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3312:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:805:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3324:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:817:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3332:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:825:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3343:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:836:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3351:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:844:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3363:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:856:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3371:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, value: NClob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:864:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, value: NClob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3382:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _value: NClob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:875:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _value: NClob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3390:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:883:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3401:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:894:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3409:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:902:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3421:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:914:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3429:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, x: Clob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:922:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, x: Clob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3440:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _x: Clob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:933:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _x: Clob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3448:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:941:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3459:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:952:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3467:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, x: Blob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:960:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, x: Blob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3478:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _x: Blob? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:971:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _x: Blob? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3486:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:979:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3498:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:991:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3506:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:999:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3517:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1010:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3525:15: error: overriding declaration requires an 'override' keyword
    open func setSQLXML( parameterIndex: Int, xmlObject: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1018:15: note: overridden declaration is here
    open func setSQLXML( parameterIndex: Int, xmlObject: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3536:15: error: overriding declaration requires an 'override' keyword
    open func setSQLXML( _ _parameterIndex: Int, _ _xmlObject: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1029:15: note: overridden declaration is here
    open func setSQLXML( _ _parameterIndex: Int, _ _xmlObject: SQLXML? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3708:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1201:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3720:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1213:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3769:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1262:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3782:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1275:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3790:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1283:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3801:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1294:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3809:15: error: overriding declaration requires an 'override' keyword
    open func setTime( parameterIndex: Int, x: Time?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1302:15: note: overridden declaration is here
    open func setTime( parameterIndex: Int, x: Time?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3821:15: error: overriding declaration requires an 'override' keyword
    open func setTime( _ _parameterIndex: Int, _ _x: Time?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1314:15: note: overridden declaration is here
    open func setTime( _ _parameterIndex: Int, _ _x: Time?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3829:15: error: overriding declaration requires an 'override' keyword
    open func setTime( parameterIndex: Int, x: Time? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1322:15: note: overridden declaration is here
    open func setTime( parameterIndex: Int, x: Time? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3840:15: error: overriding declaration requires an 'override' keyword
    open func setTime( _ _parameterIndex: Int, _ _x: Time? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1333:15: note: overridden declaration is here
    open func setTime( _ _parameterIndex: Int, _ _x: Time? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3848:15: error: overriding declaration requires an 'override' keyword
    open func setDate( parameterIndex: Int, x: Date?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1341:15: note: overridden declaration is here
    open func setDate( parameterIndex: Int, x: Date?, cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3860:15: error: overriding declaration requires an 'override' keyword
    open func setDate( _ _parameterIndex: Int, _ _x: Date?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1353:15: note: overridden declaration is here
    open func setDate( _ _parameterIndex: Int, _ _x: Date?, _ _cal: java_util.Calendar? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3868:15: error: overriding declaration requires an 'override' keyword
    open func setDate( parameterIndex: Int, x: Date? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1361:15: note: overridden declaration is here
    open func setDate( parameterIndex: Int, x: Date? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3879:15: error: overriding declaration requires an 'override' keyword
    open func setDate( _ _parameterIndex: Int, _ _x: Date? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1372:15: note: overridden declaration is here
    open func setDate( _ _parameterIndex: Int, _ _x: Date? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3887:15: error: overriding declaration requires an 'override' keyword
    open func setURL( parameterIndex: Int, x: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1380:15: note: overridden declaration is here
    open func setURL( parameterIndex: Int, x: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3898:15: error: overriding declaration requires an 'override' keyword
    open func setURL( _ _parameterIndex: Int, _ _x: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1391:15: note: overridden declaration is here
    open func setURL( _ _parameterIndex: Int, _ _x: /* java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1399:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:353:15: note: overridden declaration is here
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1411:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:365:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1419:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:373:15: note: overridden declaration is here
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1430:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:384:15: note: overridden declaration is here
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1438:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:392:15: note: overridden declaration is here
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1450:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:404:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1458:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:412:15: note: overridden declaration is here
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1470:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:424:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3906:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1399:15: note: overridden declaration is here
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3918:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1411:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3926:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1419:15: note: overridden declaration is here
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3937:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1430:15: note: overridden declaration is here
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3945:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1438:15: note: overridden declaration is here
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3957:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1450:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3965:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1458:15: note: overridden declaration is here
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3977:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1470:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1492:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:446:15: note: overridden declaration is here
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1504:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:458:15: note: overridden declaration is here
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:3999:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1492:15: note: overridden declaration is here
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/CallableStatement.swift:4011:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1504:15: note: overridden declaration is here
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1512:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:466:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1524:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:478:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1532:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:486:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1544:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:498:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1552:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:506:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1564:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:518:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1572:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:526:15: note: overridden declaration is here
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1583:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:537:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4019:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1512:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4031:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1524:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4039:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1532:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4051:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1544:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4059:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1552:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4071:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1564:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4079:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1572:15: note: overridden declaration is here
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:4090:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1583:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/CallableStatement.swift:3575:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1068:15: note: overridden declaration is here
    open func setUnicodeStream( parameterIndex: Int, x: /* java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3587:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1080:15: note: overridden declaration is here
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1591:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:545:15: note: overridden declaration is here
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1601:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:555:15: note: overridden declaration is here
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4098:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1591:15: note: overridden declaration is here
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4108:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1601:15: note: overridden declaration is here
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3623:15: error: overriding declaration requires an 'override' keyword
    open func setRef( parameterIndex: Int, x: Ref? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1116:15: note: overridden declaration is here
    open func setRef( parameterIndex: Int, x: Ref? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3634:15: error: overriding declaration requires an 'override' keyword
    open func setRef( _ _parameterIndex: Int, _ _x: Ref? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1127:15: note: overridden declaration is here
    open func setRef( _ _parameterIndex: Int, _ _x: Ref? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3642:15: error: overriding declaration requires an 'override' keyword
    open func setArray( parameterIndex: Int, x: Array? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1135:15: note: overridden declaration is here
    open func setArray( parameterIndex: Int, x: Array? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3653:15: error: overriding declaration requires an 'override' keyword
    open func setArray( _ _parameterIndex: Int, _ _x: Array? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1146:15: note: overridden declaration is here
    open func setArray( _ _parameterIndex: Int, _ _x: Array? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1609:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:563:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1621:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:575:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1629:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:583:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1641:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:595:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1649:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:603:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1661:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:615:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1669:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:623:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1680:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:634:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:3677:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1170:15: note: overridden declaration is here
    open func executeLargeUpdate() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4116:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1609:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4128:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1621:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4136:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1629:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4148:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1641:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4156:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1649:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4168:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1661:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4176:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1669:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4187:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1680:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1703:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:657:15: note: overridden declaration is here
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1713:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:667:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4210:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1703:15: note: overridden declaration is here
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4220:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1713:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1736:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:690:15: note: overridden declaration is here
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1746:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:700:15: note: overridden declaration is here
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4243:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1736:15: note: overridden declaration is here
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4253:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1746:15: note: overridden declaration is here
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1754:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:708:15: note: overridden declaration is here
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1764:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:718:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4261:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1754:15: note: overridden declaration is here
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4271:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1764:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1787:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:741:15: note: overridden declaration is here
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1797:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:751:15: note: overridden declaration is here
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4294:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1787:15: note: overridden declaration is here
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4304:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1797:15: note: overridden declaration is here
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1819:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:773:15: note: overridden declaration is here
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1829:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:783:15: note: overridden declaration is here
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4326:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1819:15: note: overridden declaration is here
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4336:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1829:15: note: overridden declaration is here
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1852:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:806:15: note: overridden declaration is here
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1863:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:817:15: note: overridden declaration is here
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4359:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1852:15: note: overridden declaration is here
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4370:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1863:15: note: overridden declaration is here
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1992:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:946:15: note: overridden declaration is here
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2002:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:956:15: note: overridden declaration is here
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4499:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1992:15: note: overridden declaration is here
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4509:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2002:15: note: overridden declaration is here
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2025:15: error: overriding declaration requires an 'override' keyword
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:979:15: note: overridden declaration is here
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4532:15: error: overriding declaration requires an 'override' keyword
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2025:15: note: overridden declaration is here
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2039:15: error: overriding declaration requires an 'override' keyword
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:993:15: note: overridden declaration is here
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4546:15: error: overriding declaration requires an 'override' keyword
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2039:15: note: overridden declaration is here
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2054:15: error: overriding declaration requires an 'override' keyword
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:1008:15: note: overridden declaration is here
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4561:15: error: overriding declaration requires an 'override' keyword
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2054:15: note: overridden declaration is here
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:2069:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1023:15: note: overridden declaration is here
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2079:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1033:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4576:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2069:15: note: overridden declaration is here
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4586:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2079:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2087:15: error: overriding declaration requires an 'override' keyword
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:1041:15: note: overridden declaration is here
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4594:15: error: overriding declaration requires an 'override' keyword
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2087:15: note: overridden declaration is here
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:2102:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
         override 
java_sql/Sources/Statement.swift:1056:15: note: overridden declaration is here
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
java_sql/Sources/CallableStatement.swift:4609:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2102:15: note: overridden declaration is here
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
java_sql/Sources/PreparedStatement.swift:2147:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1101:15: note: overridden declaration is here
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2157:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1111:15: note: overridden declaration is here
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4654:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2147:15: note: overridden declaration is here
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4664:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2157:15: note: overridden declaration is here
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2180:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1134:15: note: overridden declaration is here
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2190:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1144:15: note: overridden declaration is here
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4687:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2180:15: note: overridden declaration is here
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4697:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2190:15: note: overridden declaration is here
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Statement.swift:1198:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1210:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2244:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1198:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2256:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1210:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4751:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2244:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4763:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2256:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1218:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1229:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2264:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1218:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2275:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1229:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4771:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2264:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4782:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2275:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1399:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:353:15: note: overridden declaration is here
    open func execute( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1411:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:365:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1419:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:373:15: note: overridden declaration is here
    open func execute( sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1430:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:384:15: note: overridden declaration is here
    open func execute( _ _sql: String? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1438:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:392:15: note: overridden declaration is here
    open func execute( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1450:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:404:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1458:15: error: overriding declaration requires an 'override' keyword
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:412:15: note: overridden declaration is here
    open func execute( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1470:15: error: overriding declaration requires an 'override' keyword
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:424:15: note: overridden declaration is here
    open func execute( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1492:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:446:15: note: overridden declaration is here
    open func executeQuery( sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1504:15: error: overriding declaration requires an 'override' keyword
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
         override 
java_sql/Sources/Statement.swift:458:15: note: overridden declaration is here
    open func executeQuery( _ _sql: String? ) throws /* java.sql.SQLException */ -> ResultSet! {
              ^
java_sql/Sources/PreparedStatement.swift:1512:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:466:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1524:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:478:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1532:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:486:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1544:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:498:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1552:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:506:15: note: overridden declaration is here
    open func executeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1564:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:518:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1572:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:526:15: note: overridden declaration is here
    open func executeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1583:15: error: overriding declaration requires an 'override' keyword
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
         override 
java_sql/Sources/Statement.swift:537:15: note: overridden declaration is here
    open func executeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int {
              ^
java_sql/Sources/PreparedStatement.swift:1591:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:545:15: note: overridden declaration is here
    open func addBatch( sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1601:15: error: overriding declaration requires an 'override' keyword
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:555:15: note: overridden declaration is here
    open func addBatch( _ _sql: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1609:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:563:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1621:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:575:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnIndexes: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1629:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:583:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1641:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:595:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _columnNames: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1649:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:603:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String?, autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1661:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:615:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String?, _ _autoGeneratedKeys: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1669:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:623:15: note: overridden declaration is here
    open func executeLargeUpdate( sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1680:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:634:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _sql: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1703:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:657:15: note: overridden declaration is here
    open func setMaxFieldSize( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1713:15: error: overriding declaration requires an 'override' keyword
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:667:15: note: overridden declaration is here
    open func setMaxFieldSize( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1736:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:690:15: note: overridden declaration is here
    open func setMaxRows( max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1746:15: error: overriding declaration requires an 'override' keyword
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:700:15: note: overridden declaration is here
    open func setMaxRows( _ _max: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1754:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:708:15: note: overridden declaration is here
    open func setEscapeProcessing( enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1764:15: error: overriding declaration requires an 'override' keyword
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:718:15: note: overridden declaration is here
    open func setEscapeProcessing( _ _enable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1787:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:741:15: note: overridden declaration is here
    open func setQueryTimeout( seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1797:15: error: overriding declaration requires an 'override' keyword
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:751:15: note: overridden declaration is here
    open func setQueryTimeout( _ _seconds: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1819:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:773:15: note: overridden declaration is here
    open func setCursorName( name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1829:15: error: overriding declaration requires an 'override' keyword
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:783:15: note: overridden declaration is here
    open func setCursorName( _ _name: String? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1852:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:806:15: note: overridden declaration is here
    open func getMoreResults( current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1863:15: error: overriding declaration requires an 'override' keyword
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:817:15: note: overridden declaration is here
    open func getMoreResults( _ _current: Int ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:1992:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:946:15: note: overridden declaration is here
    open func setPoolable( poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2002:15: error: overriding declaration requires an 'override' keyword
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:956:15: note: overridden declaration is here
    open func setPoolable( _ _poolable: Bool ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2025:15: error: overriding declaration requires an 'override' keyword
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:979:15: note: overridden declaration is here
    open func closeOnCompletion() throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2039:15: error: overriding declaration requires an 'override' keyword
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:993:15: note: overridden declaration is here
    open func isCloseOnCompletion() throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2054:15: error: overriding declaration requires an 'override' keyword
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:1008:15: note: overridden declaration is here
    open func getLargeUpdateCount() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:2069:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1023:15: note: overridden declaration is here
    open func setLargeMaxRows( max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2079:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1033:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _max: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2087:15: error: overriding declaration requires an 'override' keyword
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:1041:15: note: overridden declaration is here
    open func getLargeMaxRows() throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:2102:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
         override 
java_sql/Sources/Statement.swift:1056:15: note: overridden declaration is here
    open func executeLargeBatch() throws /* java.sql.SQLException */ -> [Int64]! {
              ^
java_sql/Sources/PreparedStatement.swift:2147:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1101:15: note: overridden declaration is here
    open func setFetchDirection( direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2157:15: error: overriding declaration requires an 'override' keyword
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1111:15: note: overridden declaration is here
    open func setFetchDirection( _ _direction: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2180:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1134:15: note: overridden declaration is here
    open func setFetchSize( rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:2190:15: error: overriding declaration requires an 'override' keyword
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:1144:15: note: overridden declaration is here
    open func setFetchSize( _ _rows: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Statement.swift:1198:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1210:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2244:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1198:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2256:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1210:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1218:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1229:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2264:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1218:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2275:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1229:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/DriverManager.swift:177:58: error: use of undeclared type 'DriverAction'
    open class func registerDriver( driver: Driver?, da: DriverAction? ) throws /* java.sql.SQLException */ {
                                                         ^~~~~~~~~~~~
java_sql/Sources/DriverManager.swift:188:64: error: use of undeclared type 'DriverAction'
    open class func registerDriver( _ _driver: Driver?, _ _da: DriverAction? ) throws /* java.sql.SQLException */ {
                                                               ^~~~~~~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/SQLOutput.swift:16:64: error: use of undeclared type 'SQLType'
    func writeObject( x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:70: error: use of undeclared type 'SQLType'
    func writeObject( _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:254:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:255:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:259:83: error: use of undeclared type 'SQLType'
    func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:260:92: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:216:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:217:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:221:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:222:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:226:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:227:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:231:62: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                             ^~~~~~~
java_sql/Sources/CallableStatement.swift:232:68: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:236:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:237:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:241:65: error: use of undeclared type 'SQLType'
    func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:242:71: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:499:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:500:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:509:86: error: use of undeclared type 'SQLType'
    func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:510:95: error: use of undeclared type 'SQLType'
    func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                              ^~~~~~~
java_sql/Sources/CallableStatement.swift:1364:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1376:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1384:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, typeName: String? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1396:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _typeName: String? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1404:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1415:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1423:67: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterIndex: Int, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                  ^~~~~~~
java_sql/Sources/CallableStatement.swift:1435:73: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterIndex: Int, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                        ^~~~~~~
java_sql/Sources/CallableStatement.swift:1443:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType?, scale: Int ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1455:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType?, _ _scale: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1463:70: error: use of undeclared type 'SQLType'
    open func registerOutParameter( parameterName: String?, sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:1474:76: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _parameterName: String?, _ _sqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1221:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1234:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1242:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1254:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2434:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2447:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:2474:91: error: use of undeclared type 'SQLType'
    open func setObject( parameterName: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:2486:100: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterName: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                   ^~~~~~~
java_sql/Sources/CallableStatement.swift:3728:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3741:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3749:88: error: use of undeclared type 'SQLType'
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3761:97: error: use of undeclared type 'SQLType'
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:586:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:587:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:591:87: error: use of undeclared type 'SQLType'
    func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                      ^~~~~~~
java_sql/Sources/ResultSet.swift:592:96: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:596:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:597:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:601:83: error: use of undeclared type 'SQLType'
    func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:602:92: error: use of undeclared type 'SQLType'
    func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3011:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3024:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3032:92: error: use of undeclared type 'SQLType'
    open func updateObject( columnLabel: String?, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                           ^~~~~~~
java_sql/Sources/ResultSet.swift:3044:101: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnLabel: String?, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                    ^~~~~~~
java_sql/Sources/ResultSet.swift:3052:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3065:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
java_sql/Sources/ResultSet.swift:3073:88: error: use of undeclared type 'SQLType'
    open func updateObject( columnIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3085:97: error: use of undeclared type 'SQLType'
    open func updateObject( _ _columnIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                                ^~~~~~~
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:2996:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3008:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3016:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3029:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3037:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3049:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3057:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3070:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:2996:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3037:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3008:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3016:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3029:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3049:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3057:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3070:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/Timestamp.swift:254:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _arg0: /* java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:28:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/SQLOutput.swift:16:58: error: use of undeclared type 'SQLType'
    func writeObject( arg0: java_lang.JavaObject?, arg1: SQLType? ) throws /* java.sql.SQLException */
                                                         ^~~~~~~
java_sql/Sources/SQLOutput.swift:17:64: error: use of undeclared type 'SQLType'
    func writeObject( _ _arg0: java_lang.JavaObject?, _ _arg1: SQLType? ) throws /* java.sql.SQLException */
                                                               ^~~~~~~
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:2996:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3037:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3008:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3016:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3029:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3049:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3057:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3070:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:122:67: error: use of undeclared type 'SQLType'
    func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:123:76: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:132:67: error: use of undeclared type 'SQLType'
    func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:133:76: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:369:71: error: use of undeclared type 'SQLType'
    func setObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:370:80: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                               ^~~~~~~
java_sql/Sources/CallableStatement.swift:374:71: error: use of undeclared type 'SQLType'
    func setObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:375:80: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                               ^~~~~~~
java_sql/Sources/CallableStatement.swift:414:49: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: Int, arg1: SQLType? ) throws /* java.sql.SQLException */
                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:415:55: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType? ) throws /* java.sql.SQLException */
                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:419:49: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: Int, arg1: SQLType?, arg2: Int ) throws /* java.sql.SQLException */
                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:420:55: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType?, _ _arg2: Int ) throws /* java.sql.SQLException */
                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:424:53: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: String?, arg1: SQLType?, arg2: Int ) throws /* java.sql.SQLException */
                                                    ^~~~~~~
java_sql/Sources/CallableStatement.swift:425:59: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType?, _ _arg2: Int ) throws /* java.sql.SQLException */
                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:429:53: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: String?, arg1: SQLType?, arg2: String? ) throws /* java.sql.SQLException */
                                                    ^~~~~~~
java_sql/Sources/CallableStatement.swift:430:59: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType?, _ _arg2: String? ) throws /* java.sql.SQLException */
                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:434:53: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: String?, arg1: SQLType? ) throws /* java.sql.SQLException */
                                                    ^~~~~~~
java_sql/Sources/CallableStatement.swift:435:59: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType? ) throws /* java.sql.SQLException */
                                                          ^~~~~~~
java_sql/Sources/CallableStatement.swift:439:49: error: use of undeclared type 'SQLType'
    func registerOutParameter( arg0: Int, arg1: SQLType?, arg2: String? ) throws /* java.sql.SQLException */
                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:440:55: error: use of undeclared type 'SQLType'
    func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType?, _ _arg2: String? ) throws /* java.sql.SQLException */
                                                      ^~~~~~~
java_sql/Sources/CallableStatement.swift:1934:76: error: use of undeclared type 'SQLType'
    open func setObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1946:85: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                    ^~~~~~~
java_sql/Sources/CallableStatement.swift:1954:76: error: use of undeclared type 'SQLType'
    open func setObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:1967:85: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                    ^~~~~~~
java_sql/Sources/PreparedStatement.swift:711:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:723:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:751:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:764:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3218:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3230:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:3258:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/CallableStatement.swift:3271:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/CallableStatement.swift:2113:54: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: Int, arg1: SQLType? ) throws /* java.sql.SQLException */ {
                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:2124:60: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType? ) throws /* java.sql.SQLException */ {
                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:2132:54: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: Int, arg1: SQLType?, arg2: Int ) throws /* java.sql.SQLException */ {
                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:2144:60: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
                                                           ^~~~~~~
java_sql/Sources/CallableStatement.swift:2152:58: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: String?, arg1: SQLType?, arg2: Int ) throws /* java.sql.SQLException */ {
                                                         ^~~~~~~
java_sql/Sources/CallableStatement.swift:2164:64: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType?, _ _arg2: Int ) throws /* java.sql.SQLException */ {
                                                               ^~~~~~~
java_sql/Sources/CallableStatement.swift:2172:58: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: String?, arg1: SQLType?, arg2: String? ) throws /* java.sql.SQLException */ {
                                                         ^~~~~~~
java_sql/Sources/CallableStatement.swift:2184:64: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType?, _ _arg2: String? ) throws /* java.sql.SQLException */ {
                                                               ^~~~~~~
java_sql/Sources/CallableStatement.swift:2192:58: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: String?, arg1: SQLType? ) throws /* java.sql.SQLException */ {
                                                         ^~~~~~~
java_sql/Sources/CallableStatement.swift:2203:64: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: String?, _ _arg1: SQLType? ) throws /* java.sql.SQLException */ {
                                                               ^~~~~~~
java_sql/Sources/CallableStatement.swift:2211:54: error: use of undeclared type 'SQLType'
    open func registerOutParameter( arg0: Int, arg1: SQLType?, arg2: String? ) throws /* java.sql.SQLException */ {
                                                     ^~~~~~~
java_sql/Sources/CallableStatement.swift:2223:60: error: use of undeclared type 'SQLType'
    open func registerOutParameter( _ _arg0: Int, _ _arg1: SQLType?, _ _arg2: String? ) throws /* java.sql.SQLException */ {
                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1510:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:464:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1522:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:476:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1530:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:484:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1541:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:495:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1549:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:503:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1561:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:515:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1569:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:523:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1581:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:535:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4017:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1510:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4029:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1522:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4037:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1530:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4048:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1541:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4056:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1549:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4068:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1561:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4076:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1569:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/CallableStatement.swift:4088:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1581:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1970:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:924:15: note: overridden declaration is here
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1980:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:934:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4477:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1970:15: note: overridden declaration is here
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4487:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1980:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:2996:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3037:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3008:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3016:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3029:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3049:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3057:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3070:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:122:67: error: use of undeclared type 'SQLType'
    func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:123:76: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:132:67: error: use of undeclared type 'SQLType'
    func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                  ^~~~~~~
java_sql/Sources/PreparedStatement.swift:133:76: error: use of undeclared type 'SQLType'
    func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                           ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1510:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:464:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1522:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:476:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: Int ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1530:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:484:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1541:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:495:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1549:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:503:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1561:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:515:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [String]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1569:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:523:15: note: overridden declaration is here
    open func executeLargeUpdate( arg0: String?, arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:1581:15: error: overriding declaration requires an 'override' keyword
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
         override 
java_sql/Sources/Statement.swift:535:15: note: overridden declaration is here
    open func executeLargeUpdate( _ _arg0: String?, _ _arg1: [Int32]? ) throws /* java.sql.SQLException */ -> Int64 {
              ^
java_sql/Sources/PreparedStatement.swift:711:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:723:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:751:72: error: use of undeclared type 'SQLType'
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                       ^~~~~~~
java_sql/Sources/PreparedStatement.swift:764:81: error: use of undeclared type 'SQLType'
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                ^~~~~~~
java_sql/Sources/PreparedStatement.swift:1970:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:924:15: note: overridden declaration is here
    open func setLargeMaxRows( arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/PreparedStatement.swift:1980:15: error: overriding declaration requires an 'override' keyword
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/Statement.swift:934:15: note: overridden declaration is here
    open func setLargeMaxRows( _ _arg0: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/ResultSet.swift:582:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:583:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:587:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:588:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:592:70: error: use of undeclared type 'SQLType'
    func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                     ^~~~~~~
java_sql/Sources/ResultSet.swift:593:79: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:597:74: error: use of undeclared type 'SQLType'
    func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */
                                                                         ^~~~~~~
java_sql/Sources/ResultSet.swift:598:83: error: use of undeclared type 'SQLType'
    func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */
                                                                                  ^~~~~~~
java_sql/Sources/ResultSet.swift:2996:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3037:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3008:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/ResultSet.swift:3016:75: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                          ^~~~~~~
java_sql/Sources/ResultSet.swift:3029:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3049:84: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
                                                                                   ^~~~~~~
java_sql/Sources/ResultSet.swift:3057:79: error: use of undeclared type 'SQLType'
    open func updateObject( arg0: String?, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
                                                                              ^~~~~~~
java_sql/Sources/ResultSet.swift:3070:88: error: use of undeclared type 'SQLType'
    open func updateObject( _ _arg0: String?, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
                                                                                       ^~~~~~~
java_sql/Sources/DriverManager.swift:99:58: error: use of undeclared type 'DriverAction'
    open class func registerDriver( arg0: Driver?, arg1: DriverAction? ) throws /* java.sql.SQLException */ {
                                                         ^~~~~~~~~~~~
java_sql/Sources/DriverManager.swift:110:64: error: use of undeclared type 'DriverAction'
    open class func registerDriver( _ _arg0: Driver?, _ _arg1: DriverAction? ) throws /* java.sql.SQLException */ {
                                                               ^~~~~~~~~~~~
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Write auxiliary files
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-OutputFileMap.json
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.LinkFileList
java_sql/Sources/CallableStatement.swift:3021:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:514:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3034:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:527:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3063:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:556:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3075:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:568:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3021:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:514:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType?, arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3034:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:527:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType?, _ _arg3: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3063:15: error: overriding declaration requires an 'override' keyword
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:556:15: note: overridden declaration is here
    open func setObject( arg0: Int, arg1: java_lang.JavaObject?, arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3075:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:568:15: note: overridden declaration is here
    open func setObject( _ _arg0: Int, _ _arg1: java_lang.JavaObject?, _ _arg2: SQLType? ) throws /* java.sql.SQLException */ {
              ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/Time.swift:130:15: error: overriding declaration requires an 'override' keyword
    open func setYear( _ _i: Int ) {
              ^
         override 
java_util.Date:37:15: note: overridden declaration is here
    open func setYear(_ _year: Int)
              ^
java_sql/Sources/Time.swift:147:15: error: overriding declaration requires an 'override' keyword
    open func setMonth( _ _i: Int ) {
              ^
         override 
java_util.Date:40:15: note: overridden declaration is here
    open func setMonth(_ _month: Int)
              ^
java_sql/Sources/Time.swift:162:15: error: overriding declaration requires an 'override' keyword
    open func setDate( _ _i: Int ) {
              ^
         override 
java_util.Date:42:15: note: overridden declaration is here
    open func setDate(_ _date: Int)
              ^
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSetMetaData.swift:568:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:588:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:599:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3747:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:588:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3760:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:601:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3789:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:630:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3801:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:642:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/ParameterMetaData.swift:340:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:352:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:360:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:371:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3747:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:588:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3760:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:601:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3789:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:630:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_lang.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3801:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:642:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_lang.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/ParameterMetaData.swift:340:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:352:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:360:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:371:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4538:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4550:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4558:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4569:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:568:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:34:15: note: overridden declaration is here
    open func unwrap( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:46:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> java_lang.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:588:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:54:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:599:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:65:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_lang.Class? ) throws /* java.sql.SQLException */ -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/MenuComponent.swift:12:76: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class MenuComponent: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                          ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Dimension.swift:12:63: error: multiple inheritance from classes 'Dimension2D' and 'UnavailableProtocol'
open class Dimension: Dimension2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Insets.swift:12:90: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Insets: java_lang.JavaObject, java_lang.Cloneable, /* java.io.Serializable */ UnavailableProtocol {
                   ~~~~~~~~~~~~~~~~~~~~                                                  ^
java_awt/Sources/Cursor.swift:12:69: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Cursor: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                   ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Point.swift:12:55: error: multiple inheritance from classes 'Point2D' and 'UnavailableProtocol'
open class Point: Point2D, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~                             ^
java_awt/Sources/DragGestureRecognizer.swift:13:84: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class DragGestureRecognizer: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                                  ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/DragSource.swift:13:73: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class DragSource: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                       ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/FontMetrics.swift:12:74: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class FontMetrics: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                        ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Font.swift:13:67: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Font: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                 ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Color.swift:12:75: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Color: java_lang.JavaObject, Paint, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~~~~~~~~~~~~~~                                    ^
java_awt/Sources/CheckboxGroup.swift:12:76: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class CheckboxGroup: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                          ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Rectangle.swift:12:63: error: multiple inheritance from classes 'Rectangle2D' and 'UnavailableProtocol'
open class Rectangle: Rectangle2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Event.swift:12:68: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Event: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/DragSourceContext.swift:13:126: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class DragSourceContext: java_lang.JavaObject, DragSourceListener, DragSourceMotionListener, /* java.io.Serializable */ UnavailableProtocol {
                              ~~~~~~~~~~~~~~~~~~~~                                                                           ^
java_awt/Sources/ColorSpace.swift:12:73: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class ColorSpace: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                       ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Toolkit.swift:317:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:334:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:374:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:394:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:414:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:434:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:454:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:474:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:494:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:514:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:534:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:554:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:571:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:588:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:608:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:628:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:648:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:668:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:708:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:728:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: target, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:933:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: frame, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:952:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: frame, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:954:21: error: ambiguous use of 'encode(value:locals:)'
        __args[2] = JNIType.encode( value: jobAttributes, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:955:21: error: ambiguous use of 'encode(value:locals:)'
        __args[3] = JNIType.encode( value: pageAttributes, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:1069:21: error: ambiguous use of 'encode(value:locals:)'
        __args[1] = JNIType.encode( value: hotSpot, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:1195:21: error: ambiguous use of 'encode(value:locals:)'
        __args[2] = JNIType.encode( value: c, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Toolkit.swift:1465:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: c, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/MenuComponent.swift:12:76: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class MenuComponent: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                          ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Point.swift:12:55: error: multiple inheritance from classes 'Point2D' and 'UnavailableProtocol'
open class Point: Point2D, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~                             ^
java_awt/Sources/Dimension.swift:12:63: error: multiple inheritance from classes 'Dimension2D' and 'UnavailableProtocol'
open class Dimension: Dimension2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Event.swift:12:68: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Event: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/DropTarget.swift:13:93: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class DropTarget: java_lang.JavaObject, DropTargetListener, /* java.io.Serializable */ UnavailableProtocol {
                       ~~~~~~~~~~~~~~~~~~~~                                                 ^
java_awt/Sources/Cursor.swift:12:69: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Cursor: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                   ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/ComponentOrientation.swift:13:83: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class ComponentOrientation: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                                 ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Rectangle.swift:12:63: error: multiple inheritance from classes 'Rectangle2D' and 'UnavailableProtocol'
open class Rectangle: Rectangle2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Color.swift:12:75: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Color: java_lang.JavaObject, Paint, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~~~~~~~~~~~~~~                                    ^
java_awt/Sources/Font.swift:13:67: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Font: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                 ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/FontMetrics.swift:12:74: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class FontMetrics: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                        ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:392:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:451:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:571:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:643:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:728:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:759:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:825:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/ColorSpace.swift:12:73: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class ColorSpace: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                       ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:1107:21: error: ambiguous use of 'encode(value:locals:)'
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:2440:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:2548:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:2579:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:2729:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3067:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3122:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3137:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3589:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3617:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:3645:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Color.swift:12:75: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Color: java_lang.JavaObject, Paint, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~~~~~~~~~~~~~~                                    ^
java_awt/Sources/TextComponent.swift:589:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: c, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Dimension.swift:12:63: error: multiple inheritance from classes 'Dimension2D' and 'UnavailableProtocol'
open class Dimension: Dimension2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Dimension.swift:12:63: error: multiple inheritance from classes 'Dimension2D' and 'UnavailableProtocol'
open class Dimension: Dimension2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/CheckboxGroup.swift:12:76: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class CheckboxGroup: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                          ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/CheckboxGroup.swift:12:76: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class CheckboxGroup: java_lang.JavaObject, /* java.io.Serializable */ UnavailableProtocol {
                          ~~~~~~~~~~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/CheckboxGroup.swift:51:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: box, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/CheckboxGroup.swift:92:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: box, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/KeyboardFocusManagerPeer.swift:49:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: win, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/KeyboardFocusManagerPeer.swift:64:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: activeWindow, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/KeyboardFocusManagerPeer.swift:92:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: comp, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/PrinterJob.swift:182:21: error: ambiguous use of 'encode(value:locals:)'
        __args[1] = JNIType.encode( value: format, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/PrinterJob.swift:235:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: page, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/PrinterJob.swift:268:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: page, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/PrinterJob.swift:285:21: error: ambiguous use of 'encode(value:locals:)'
        __args[0] = JNIType.encode( value: page, locals: &__locals )
                    ^
java_swift.JNIType:2:24: note: found this candidate
    public static func encode(value: java_swift.JNIObject?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_swift.JNIType:6:24: note: found this candidate
    public static func encode(value: JavaProtocol?, locals: UnsafeMutablePointer<[jobject]>) -> jvalue
                       ^
java_awt/Sources/DragSourceContext.swift:13:126: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class DragSourceContext: java_lang.JavaObject, DragSourceListener, DragSourceMotionListener, /* java.io.Serializable */ UnavailableProtocol {
                              ~~~~~~~~~~~~~~~~~~~~                                                                           ^
java_awt/Sources/Rectangle.swift:12:63: error: multiple inheritance from classes 'Rectangle2D' and 'UnavailableProtocol'
open class Rectangle: Rectangle2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Dimension.swift:12:63: error: multiple inheritance from classes 'Dimension2D' and 'UnavailableProtocol'
open class Dimension: Dimension2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/Point.swift:12:55: error: multiple inheritance from classes 'Point2D' and 'UnavailableProtocol'
open class Point: Point2D, /* java.io.Serializable */ UnavailableProtocol {
                  ~~~~~~~                             ^
java_awt/Sources/CubicCurve2D_Float.swift:12:73: error: multiple inheritance from classes 'CubicCurve2D' and 'UnavailableProtocol'
open class CubicCurve2D_Float: CubicCurve2D, /* java.io.Serializable */ UnavailableProtocol {
                               ~~~~~~~~~~~~                             ^
java_awt/Sources/Component.swift:13:102: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class Component: java_lang.JavaObject, ImageObserver, MenuContainer, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~~~~~~~~~~                                                           ^
java_awt/Sources/Rectangle.swift:12:63: error: multiple inheritance from classes 'Rectangle2D' and 'UnavailableProtocol'
open class Rectangle: Rectangle2D, /* java.io.Serializable */ UnavailableProtocol {
                      ~~~~~~~~~~~                             ^
java_awt/Sources/AffineTransform.swift:12:99: error: multiple inheritance from classes 'JavaObject' and 'UnavailableProtocol'
open class AffineTransform: java_lang.JavaObject, java_lang.Cloneable, /* java.io.Serializable */ UnavailableProtocol {
                            ~~~~~~~~~~~~~~~~~~~~                                                  ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ditto /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_swift.framework/Versions/A/java_swift normal x86_64
Touch /tmp/Debug/java_swift.framework
    /usr/bin/touch -c /tmp/Debug/java_swift.framework
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
ProcessInfoPlistFile /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_util/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ditto /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_swift.framework/Versions/A/java_swift normal x86_64
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
CompileC /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util_vers.o /tmp/java_util.build/Debug/java_util.build/DerivedSources/java_util_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
CpHeader java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_util/java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers
Ditto /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
Write auxiliary files
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-OutputFileMap.json
write-file /tmp/java_sql.build/Debug/java_sql.build/swift-overrides.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-generated-files.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module-overlay.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-project-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-own-target-headers.hmap
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/DerivedSources
write-file /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c
write-file /tmp/java_sql.build/all-product-headers.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-non-framework-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.LinkFileList
Create product structure
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_sql.framework/Modules
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_sql.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_sql.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_sql.framework/Headers
/bin/ln -sfh Versions/Current/java_sql /tmp/Debug/java_sql.framework/java_sql
ProcessInfoPlistFile /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_sql/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist
java_sql/Sources/Connection.swift:1237:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1249:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Connection.swift:1257:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Connection.swift:1268:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4234:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4246:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4254:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4265:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4234:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4246:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSet.swift:4254:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSet.swift:4265:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Timestamp.swift:117:15: error: overriding declaration requires an 'override' keyword
    open func equals( _ _ts: java_swift.JavaObject? ) -> Bool {
              ^
         override 
java_util.Date:19:24: note: overridden declaration is here
    override open func equals(_ _obj: java_swift.JavaObject?) -> Bool
                       ^
java_sql/Sources/Timestamp.swift:153:15: error: overriding declaration requires an 'override' keyword
    open func compareTo( _ _o: java_swift.JavaObject? ) -> Int {
              ^
         override 
java_util.Date:22:15: note: overridden declaration is here
    open func compareTo(_ _arg0: java_swift.JavaObject?) -> Int
              ^
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/Statement.swift:1176:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1188:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1196:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1207:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1176:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1188:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1196:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1207:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3637:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1191:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3649:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1203:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3657:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1211:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3670:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1224:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3678:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1232:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3691:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1245:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3699:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1253:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3711:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1265:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3719:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1273:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3730:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1284:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Statement.swift:1176:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1188:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2195:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1176:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2207:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1188:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4641:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2195:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4653:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2207:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1196:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1207:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2215:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1196:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2226:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1207:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4661:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2215:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4672:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2226:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1176:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1188:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2195:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1176:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2207:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1188:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1196:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1207:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2215:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1196:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2226:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1207:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:3637:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1191:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3649:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1203:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3657:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1211:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType?, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3670:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1224:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType?, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3678:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1232:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: Int, scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3691:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1245:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: Int, _ _scaleOrLength: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3699:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1253:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject?, targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3711:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1265:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject?, _ _targetSqlType: SQLType? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3719:15: error: overriding declaration requires an 'override' keyword
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1273:15: note: overridden declaration is here
    open func setObject( parameterIndex: Int, x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3730:15: error: overriding declaration requires an 'override' keyword
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1284:15: note: overridden declaration is here
    open func setObject( _ _parameterIndex: Int, _ _x: java_swift.JavaObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Statement.swift:1176:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1188:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2195:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1176:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/PreparedStatement.swift:2207:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Statement.swift:1188:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4641:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2195:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/CallableStatement.swift:4653:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2207:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/Statement.swift:1196:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/Statement.swift:1207:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2215:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1196:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/PreparedStatement.swift:2226:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Statement.swift:1207:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4661:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2215:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/CallableStatement.swift:4672:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2226:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:333:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:345:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ParameterMetaData.swift:353:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ParameterMetaData.swift:364:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4504:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4516:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/DatabaseMetaData.swift:4524:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/DatabaseMetaData.swift:4535:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/ResultSetMetaData.swift:549:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:561:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:569:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:549:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:561:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:569:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:549:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:561:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:569:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:549:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:33:15: note: overridden declaration is here
    open func unwrap( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:561:15: error: overriding declaration requires an 'override' keyword
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
         override 
java_sql/Sources/Wrapper.swift:45:15: note: overridden declaration is here
    open func unwrap( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> java_swift.JavaObject! {
              ^
java_sql/Sources/ResultSetMetaData.swift:569:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:53:15: note: overridden declaration is here
    open func isWrapperFor( iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
java_sql/Sources/ResultSetMetaData.swift:580:15: error: overriding declaration requires an 'override' keyword
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
         override 
java_sql/Sources/Wrapper.swift:64:15: note: overridden declaration is here
    open func isWrapperFor( _ _iface: java_swift.JavaClass? ) throws /* java.sql.SQLException */ -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
CompileC /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql_vers.o /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
CpHeader java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_sql/java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers
Ditto /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Write auxiliary files
write-file /tmp/java_awt.build/Debug/java_awt.build/module.modulemap
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt.LinkFileList
write-file /tmp/java_awt.build/all-product-headers.yaml
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/DerivedSources
write-file /tmp/java_awt.build/Debug/java_awt.build/DerivedSources/java_awt_vers.c
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module.modulemap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module-overlay.yaml
write-file /tmp/java_awt.build/Debug/java_awt.build/swift-overrides.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-project-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-own-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-non-framework-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt-OutputFileMap.json
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-generated-files.hmap
Create product structure
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_awt.framework/Modules
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_awt.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_awt.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_awt.framework/Headers
/bin/ln -sfh Versions/Current/java_awt /tmp/Debug/java_awt.framework/java_awt
ProcessInfoPlistFile /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_awt/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
java_awt/Sources/Button.swift:324:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/Button.swift:332:65: error: no type named 'Class' in module 'java_lang'
    override open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                                ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/DragSource.swift:129:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/DragSource.swift:137:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
java_awt/Sources/DragSource.swift:410:79: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( recognizerAbstractClass: java_lang.Class?, c: Component?, actions: Int, dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                              ^
java_awt/Sources/DragSource.swift:422:82: error: no type named 'Class' in module 'java_lang'
    open func createDragGestureRecognizer( _ _recognizerAbstractClass: java_lang.Class?, _ _c: Component?, _ _actions: Int, _ _dgl: DragGestureListener? ) -> DragGestureRecognizer! {
                                                                                 ^
java_awt/Sources/Component.swift:976:45: error: no type named 'Class' in module 'java_lang'
    open func getListeners( arg0: java_lang.Class? ) -> [EventListener]! {
                                            ^
java_awt/Sources/Component.swift:984:48: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _arg0: java_lang.Class? ) -> [EventListener]! {
                                               ^
java_awt/Sources/MenuItem.swift:187:53: error: no type named 'Class' in module 'java_lang'
    open func getListeners( listenerType: java_lang.Class? ) -> [EventListener]! {
                                                    ^
java_awt/Sources/MenuItem.swift:195:56: error: no type named 'Class' in module 'java_lang'
    open func getListeners( _ _listenerType: java_lang.Class? ) -> [EventListener]! {
                                                       ^
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
CompileC /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util_vers.o /tmp/java_util.build/Debug/java_util.build/DerivedSources/java_util_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
CpHeader java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_util/java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers
Ditto /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
Write auxiliary files
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-OutputFileMap.json
write-file /tmp/java_sql.build/Debug/java_sql.build/swift-overrides.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-generated-files.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module-overlay.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-project-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-own-target-headers.hmap
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/DerivedSources
write-file /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c
write-file /tmp/java_sql.build/all-product-headers.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-non-framework-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.LinkFileList
Create product structure
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_sql.framework/Modules
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_sql.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_sql.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_sql.framework/Headers
/bin/ln -sfh Versions/Current/java_sql /tmp/Debug/java_sql.framework/java_sql
ProcessInfoPlistFile /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_sql/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
“Swift Language Version” (SWIFT_VERSION) is required to be configured correctly for targets which use Swift. Use the [Edit > Convert > To Current Swift Syntax…] menu to choose a Swift version or use the Build Settings editor to configure the build setting directly.
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_sql/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
CompileC /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql_vers.o /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
CpHeader java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_sql/java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers
Ditto /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Write auxiliary files
write-file /tmp/java_awt.build/Debug/java_awt.build/module.modulemap
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt.LinkFileList
write-file /tmp/java_awt.build/all-product-headers.yaml
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/DerivedSources
write-file /tmp/java_awt.build/Debug/java_awt.build/DerivedSources/java_awt_vers.c
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module.modulemap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module-overlay.yaml
write-file /tmp/java_awt.build/Debug/java_awt.build/swift-overrides.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-project-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-own-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-non-framework-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt-OutputFileMap.json
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-generated-files.hmap
Create product structure
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_awt.framework/Modules
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_awt.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_awt.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_awt.framework/Headers
/bin/ln -sfh Versions/Current/java_awt /tmp/Debug/java_awt.framework/java_awt
ProcessInfoPlistFile /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_awt/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:85:15: error: overriding declaration requires an 'override' keyword
    open func toString() -> String! {
              ^
         override 
java_swift.JavaObject:14:15: note: overridden declaration is here
    open func toString() -> String!
              ^
java_awt/Sources/BufferCapabilities_FlipContents.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func hashCode() -> Int {
              ^
         override 
java_swift.JavaObject:15:15: note: overridden declaration is here
    open func hashCode() -> Int
              ^
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Build settings from command line:
    SYMROOT = /tmp
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/CallableStatement.swift:2673:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1096:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2685:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1108:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2693:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1116:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2704:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1127:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2712:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1135:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2724:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1147:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2751:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( parameterIndex: Int, x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1155:15: note: overridden declaration is here
    open func setBigDecimal( parameterIndex: Int, x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2762:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1166:15: note: overridden declaration is here
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2829:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1174:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2840:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1185:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2848:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1193:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2860:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1205:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2868:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1213:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2880:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1225:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2946:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1233:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2958:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1245:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2985:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1272:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2996:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1283:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3177:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1348:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3189:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1360:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3197:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1368:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3208:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1379:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3216:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1387:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3228:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1399:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3294:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1407:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3305:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1418:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3332:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1445:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3344:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1457:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3747:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1706:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3759:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1718:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3767:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1726:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3778:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1737:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3844:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1745:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3855:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1756:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3863:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1764:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3875:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1776:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4602:15: error: overriding declaration requires an 'override' keyword
    open func setURL( parameterIndex: Int, x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2171:15: note: overridden declaration is here
    open func setURL( parameterIndex: Int, x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4613:15: error: overriding declaration requires an 'override' keyword
    open func setURL( _ _parameterIndex: Int, _ _x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2182:15: note: overridden declaration is here
    open func setURL( _ _parameterIndex: Int, _ _x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4621:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2190:15: note: overridden declaration is here
    open func setUnicodeStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4633:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2202:15: note: overridden declaration is here
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/CallableStatement.swift:2673:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1096:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2685:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1108:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2693:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1116:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2704:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1127:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2712:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1135:15: note: overridden declaration is here
    open func setAsciiStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2724:15: error: overriding declaration requires an 'override' keyword
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1147:15: note: overridden declaration is here
    open func setAsciiStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2751:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( parameterIndex: Int, x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1155:15: note: overridden declaration is here
    open func setBigDecimal( parameterIndex: Int, x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2762:15: error: overriding declaration requires an 'override' keyword
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1166:15: note: overridden declaration is here
    open func setBigDecimal( _ _parameterIndex: Int, _ _x: /* class java.math.BigDecimal */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2829:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1174:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2840:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1185:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2848:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1193:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2860:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1205:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2868:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1213:15: note: overridden declaration is here
    open func setBinaryStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2880:15: error: overriding declaration requires an 'override' keyword
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1225:15: note: overridden declaration is here
    open func setBinaryStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2946:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1233:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2958:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1245:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2985:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1272:15: note: overridden declaration is here
    open func setBlob( parameterIndex: Int, inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:2996:15: error: overriding declaration requires an 'override' keyword
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1283:15: note: overridden declaration is here
    open func setBlob( _ _parameterIndex: Int, _ _inputStream: /* class java.io.InputStream */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3177:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1348:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3189:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1360:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3197:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1368:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3208:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1379:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3216:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1387:15: note: overridden declaration is here
    open func setCharacterStream( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3228:15: error: overriding declaration requires an 'override' keyword
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1399:15: note: overridden declaration is here
    open func setCharacterStream( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3294:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1407:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3305:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1418:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3332:15: error: overriding declaration requires an 'override' keyword
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1445:15: note: overridden declaration is here
    open func setClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3344:15: error: overriding declaration requires an 'override' keyword
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1457:15: note: overridden declaration is here
    open func setClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3747:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1706:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3759:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1718:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3767:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1726:15: note: overridden declaration is here
    open func setNCharacterStream( parameterIndex: Int, value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3778:15: error: overriding declaration requires an 'override' keyword
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1737:15: note: overridden declaration is here
    open func setNCharacterStream( _ _parameterIndex: Int, _ _value: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3844:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1745:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3855:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1756:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3863:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1764:15: note: overridden declaration is here
    open func setNClob( parameterIndex: Int, reader: /* class java.io.Reader */ UnavailableObject?, length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:3875:15: error: overriding declaration requires an 'override' keyword
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:1776:15: note: overridden declaration is here
    open func setNClob( _ _parameterIndex: Int, _ _reader: /* class java.io.Reader */ UnavailableObject?, _ _length: Int64 ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4602:15: error: overriding declaration requires an 'override' keyword
    open func setURL( parameterIndex: Int, x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2171:15: note: overridden declaration is here
    open func setURL( parameterIndex: Int, x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4613:15: error: overriding declaration requires an 'override' keyword
    open func setURL( _ _parameterIndex: Int, _ _x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2182:15: note: overridden declaration is here
    open func setURL( _ _parameterIndex: Int, _ _x: /* class java.net.URL */ UnavailableObject? ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4621:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2190:15: note: overridden declaration is here
    open func setUnicodeStream( parameterIndex: Int, x: /* class java.io.InputStream */ UnavailableObject?, length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/CallableStatement.swift:4633:15: error: overriding declaration requires an 'override' keyword
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
         override 
java_sql/Sources/PreparedStatement.swift:2202:15: note: overridden declaration is here
    open func setUnicodeStream( _ _parameterIndex: Int, _ _x: /* class java.io.InputStream */ UnavailableObject?, _ _length: Int ) throws /* java.sql.SQLException */ {
              ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:198:21: error: overriding declaration requires an 'override' keyword
    open class func from( instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:25:21: note: overridden declaration is here
    open class func from(instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
java_sql/Sources/Timestamp.swift:207:21: error: overriding declaration requires an 'override' keyword
    open class func from( _ _instant: /* class java.time.Instant */ UnavailableObject? ) -> Timestamp! {
                    ^
         override 
java_util.Date:26:21: note: overridden declaration is here
    open class func from(_ _instant: java_swift.UnavailableObject?) -> java_util.Date!
                    ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ditto /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_swift.framework/Versions/A/java_swift normal x86_64
Touch /tmp/Debug/java_swift.framework
    /usr/bin/touch -c /tmp/Debug/java_swift.framework
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ld /tmp/Debug/java_swift.framework/Versions/A/java_swift normal x86_64
Touch /tmp/Debug/java_swift.framework
    /usr/bin/touch -c /tmp/Debug/java_swift.framework
MergeSwiftModule normal x86_64 /tmp/java_lang.build/Debug/java_lang.build/Objects-normal/x86_64/java_lang.swiftmodule
Ditto /tmp/Debug/java_lang.framework/Versions/A/Modules/java_lang.swiftmodule/x86_64.swiftmodule /tmp/java_lang.build/Debug/java_lang.build/Objects-normal/x86_64/java_lang.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_lang.build/Debug/java_lang.build/Objects-normal/x86_64/java_lang.swiftmodule /tmp/Debug/java_lang.framework/Versions/A/Modules/java_lang.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_lang.framework/Versions/A/java_lang normal x86_64
Touch /tmp/Debug/java_lang.framework
    /usr/bin/touch -c /tmp/Debug/java_lang.framework
ProcessInfoPlistFile /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_util/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
CompileC /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util_vers.o /tmp/java_util.build/Debug/java_util.build/DerivedSources/java_util_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
CpHeader java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_util/java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers
Ditto /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
Write auxiliary files
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-OutputFileMap.json
write-file /tmp/java_sql.build/Debug/java_sql.build/swift-overrides.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-generated-files.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module-overlay.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-project-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-own-target-headers.hmap
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/DerivedSources
write-file /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c
write-file /tmp/java_sql.build/all-product-headers.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-non-framework-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.LinkFileList
Create product structure
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_sql.framework/Modules
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_sql.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_sql.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_sql.framework/Headers
/bin/ln -sfh Versions/Current/java_sql /tmp/Debug/java_sql.framework/java_sql
ProcessInfoPlistFile /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_sql/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist
java_sql/Sources/JDBCType.swift:531:15: error: overriding declaration requires an 'override' keyword
    open func getName() -> String! {
              ^
         override 
java_sql/Sources/SQLType.swift:34:15: note: overridden declaration is here
    open func getName() -> String! {
              ^
java_sql/Sources/JDBCType.swift:543:15: error: overriding declaration requires an 'override' keyword
    open func getVendor() -> String! {
              ^
         override 
java_sql/Sources/SQLType.swift:46:15: note: overridden declaration is here
    open func getVendor() -> String! {
              ^
java_sql/Sources/JDBCType.swift:555:15: error: overriding declaration requires an 'override' keyword
    open func getVendorTypeNumber() -> java_lang.Integer! {
              ^
         override 
java_sql/Sources/SQLType.swift:58:15: note: overridden declaration is here
    open func getVendorTypeNumber() -> java_lang.Integer! {
              ^
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h
CompileC /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql_vers.o /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
CpHeader java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_sql/java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers
Ditto /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Write auxiliary files
write-file /tmp/java_awt.build/Debug/java_awt.build/module.modulemap
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt.LinkFileList
write-file /tmp/java_awt.build/all-product-headers.yaml
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/DerivedSources
write-file /tmp/java_awt.build/Debug/java_awt.build/DerivedSources/java_awt_vers.c
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module.modulemap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module-overlay.yaml
write-file /tmp/java_awt.build/Debug/java_awt.build/swift-overrides.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-project-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-own-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-non-framework-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt-OutputFileMap.json
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-generated-files.hmap
Create product structure
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_awt.framework/Modules
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_awt.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_awt.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_awt.framework/Headers
/bin/ln -sfh Versions/Current/java_awt /tmp/Debug/java_awt.framework/java_awt
ProcessInfoPlistFile /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_awt/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
java_awt/Sources/InputMethodContext.swift:37:15: error: overriding declaration requires an 'override' keyword
    open func cancelLatestCommittedText( attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
         override 
java_awt/Sources/InputMethodRequests.swift:49:15: note: overridden declaration is here
    open func cancelLatestCommittedText( attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
java_awt/Sources/InputMethodContext.swift:119:15: error: overriding declaration requires an 'override' keyword
    open func getCommittedText( beginIndex: Int, endIndex: Int, attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
         override 
java_awt/Sources/InputMethodRequests.swift:63:15: note: overridden declaration is here
    open func getCommittedText( beginIndex: Int, endIndex: Int, attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
java_awt/Sources/InputMethodContext.swift:177:15: error: overriding declaration requires an 'override' keyword
    open func getSelectedText( attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
         override 
java_awt/Sources/InputMethodRequests.swift:121:15: note: overridden declaration is here
    open func getSelectedText( attributes: [/* class java.text.AttributedCharacterIterator$Attribute */ UnavailableObject]? ) -> /* interface java.text.AttributedCharacterIterator */ UnavailableProtocol! {
              ^
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_util/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_util.framework/Versions/A/Resources/Info.plist
MergeSwiftModule normal x86_64 /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
Ditto /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util-Swift.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util-Swift.h
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftmodule /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftmodule
CompileC /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util_vers.o /tmp/java_util.build/Debug/java_util.build/DerivedSources/java_util_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ditto /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_util.build/Debug/java_util.build/Objects-normal/x86_64/java_util.swiftdoc /tmp/Debug/java_util.framework/Versions/A/Modules/java_util.swiftmodule/x86_64.swiftdoc
Ld /tmp/Debug/java_util.framework/Versions/A/java_util normal x86_64
CpHeader java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers/java_util.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_util/java_util.h /tmp/Debug/java_util.framework/Versions/A/Headers
Ditto /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_util.build/Debug/java_util.build/module.modulemap /tmp/Debug/java_util.framework/Versions/A/Modules
Touch /tmp/Debug/java_util.framework
    /usr/bin/touch -c /tmp/Debug/java_util.framework
Write auxiliary files
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-OutputFileMap.json
write-file /tmp/java_sql.build/Debug/java_sql.build/swift-overrides.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-generated-files.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module.modulemap
write-file /tmp/java_sql.build/Debug/java_sql.build/unextended-module-overlay.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-project-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-own-target-headers.hmap
/bin/mkdir -p /tmp/java_sql.build/Debug/java_sql.build/DerivedSources
write-file /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c
write-file /tmp/java_sql.build/all-product-headers.yaml
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/java_sql-all-non-framework-target-headers.hmap
write-file /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.LinkFileList
Create product structure
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_sql.framework/Modules
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_sql.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_sql.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_sql.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_sql.framework/Headers
/bin/ln -sfh Versions/Current/java_sql /tmp/Debug/java_sql.framework/java_sql
ProcessInfoPlistFile /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_sql/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_sql.framework/Versions/A/Resources/Info.plist
MergeSwiftModule normal x86_64 /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql-Swift.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql-Swift.h
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftmodule /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftmodule
Ditto /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql.swiftdoc /tmp/Debug/java_sql.framework/Versions/A/Modules/java_sql.swiftmodule/x86_64.swiftdoc
CompileC /tmp/java_sql.build/Debug/java_sql.build/Objects-normal/x86_64/java_sql_vers.o /tmp/java_sql.build/Debug/java_sql.build/DerivedSources/java_sql_vers.c normal x86_64 c com.apple.compilers.llvm.clang.1_0.compiler
Ld /tmp/Debug/java_sql.framework/Versions/A/java_sql normal x86_64
CpHeader java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers/java_sql.h
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks java_sql/java_sql.h /tmp/Debug/java_sql.framework/Versions/A/Headers
Ditto /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules/module.modulemap
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /tmp/java_sql.build/Debug/java_sql.build/module.modulemap /tmp/Debug/java_sql.framework/Versions/A/Modules
Touch /tmp/Debug/java_sql.framework
    /usr/bin/touch -c /tmp/Debug/java_sql.framework
Write auxiliary files
write-file /tmp/java_awt.build/Debug/java_awt.build/module.modulemap
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt.LinkFileList
write-file /tmp/java_awt.build/all-product-headers.yaml
/bin/mkdir -p /tmp/java_awt.build/Debug/java_awt.build/DerivedSources
write-file /tmp/java_awt.build/Debug/java_awt.build/DerivedSources/java_awt_vers.c
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module.modulemap
write-file /tmp/java_awt.build/Debug/java_awt.build/unextended-module-overlay.yaml
write-file /tmp/java_awt.build/Debug/java_awt.build/swift-overrides.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-project-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-own-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-non-framework-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/Objects-normal/x86_64/java_awt-OutputFileMap.json
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-all-target-headers.hmap
write-file /tmp/java_awt.build/Debug/java_awt.build/java_awt-generated-files.hmap
Create product structure
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Modules
/bin/ln -sfh Versions/Current/Modules /tmp/Debug/java_awt.framework/Modules
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Headers
/bin/mkdir -p /tmp/Debug/java_awt.framework/Versions/A/Resources
/bin/ln -sfh A /tmp/Debug/java_awt.framework/Versions/Current
/bin/ln -sfh Versions/Current/Resources /tmp/Debug/java_awt.framework/Resources
/bin/ln -sfh Versions/Current/Headers /tmp/Debug/java_awt.framework/Headers
/bin/ln -sfh Versions/Current/java_awt /tmp/Debug/java_awt.framework/java_awt
ProcessInfoPlistFile /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_awt/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_awt.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
Build settings from command line:
    SYMROOT = /tmp
ProcessInfoPlistFile /tmp/Debug/java_swift.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_swift/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_swift.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ld /tmp/Debug/java_swift.framework/Versions/A/java_swift normal x86_64
Touch /tmp/Debug/java_swift.framework
    /usr/bin/touch -c /tmp/Debug/java_swift.framework
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp
MergeSwiftModule normal x86_64 /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule
Ditto /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftdoc /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftdoc
    /usr/bin/ditto -rsrc /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftdoc /tmp/Debug/java_swift.framework/Versions/A/Modules/java_swift.swiftmodule/x86_64.swiftdoc
ProcessInfoPlistFile /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist Info.plist
    builtin-infoPlistUtility java_lang/Info.plist -expandbuildsettings -platform macosx -o /tmp/Debug/java_lang.framework/Versions/A/Resources/Info.plist
Build settings from command line:
    SYMROOT = /tmp

=== BUILD TARGET CJavaVM OF PROJECT CJavaVM WITH CONFIGURATION Debug ===

Check dependencies

=== BUILD TARGET java_swift OF PROJECT java_swift WITH CONFIGURATION Debug ===

Check dependencies

CompileSwiftSources normal x86_64 com.apple.xcode.tools.swift.compiler
    cd /Users/user/SwiftJava/java_swift
    export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer
    export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -incremental -module-name java_swift -Onone -DDEBUG -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -target x86_64-apple-macosx10.10 -g -Xfrontend -serialize-debugging-options -enable-testing -I /tmp/Debug -F /tmp/Debug -c -j8 /Users/user/SwiftJava/java_swift/Sources/JNIProxy.swift /Users/user/SwiftJava/java_swift/Sources/JavaMap.swift /Users/user/SwiftJava/java_swift/Sources/JNICore.swift /Users/user/SwiftJava/java_swift/Sources/JNIObject.swift /Users/user/SwiftJava/java_swift/Sources/JavaClass.swift /Users/user/SwiftJava/java_swift/Sources/JavaObject.swift /Users/user/SwiftJava/java_swift/Sources/JNIField.swift /Users/user/SwiftJava/java_swift/Sources/JNIMethod.swift /Users/user/SwiftJava/java_swift/Sources/JNIType.swift /Users/user/SwiftJava/java_swift/Sources/JavaSet.swift /Users/user/SwiftJava/java_swift/Sources/JavaEnum.swift /Users/user/SwiftJava/java_swift/Sources/Runnable.swift /Users/user/SwiftJava/java_swift/Sources/Throwable.swift /Users/user/SwiftJava/java_swift/Sources/HashMap.swift /Users/user/SwiftJava/java_swift/Sources/Exception.swift -output-file-map /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift-OutputFileMap.json -parseable-output -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift.swiftmodule -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/swift-overrides.hmap -Xcc -iquote -Xcc /tmp/java_swift.build/Debug/java_swift.build/java_swift-generated-files.hmap -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/java_swift-own-target-headers.hmap -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/java_swift-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /tmp/java_swift.build/all-product-headers.yaml -Xcc -iquote -Xcc /tmp/java_swift.build/Debug/java_swift.build/java_swift-project-headers.hmap -Xcc -I/tmp/Debug/include -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/DerivedSources/x86_64 -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/DerivedSources -Xcc -DDEBUG=1 -emit-objc-header -emit-objc-header-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/java_swift-Swift.h -import-underlying-module -Xcc -ivfsoverlay -Xcc /tmp/java_swift.build/Debug/java_swift.build/unextended-module-overlay.yaml -Xcc -working-directory/Users/user/SwiftJava/java_swift

CompileSwift normal x86_64 /Users/user/SwiftJava/java_swift/Sources/JavaMap.swift
    cd /Users/user/SwiftJava/java_swift
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c /Users/user/SwiftJava/java_swift/Sources/JNIProxy.swift -primary-file /Users/user/SwiftJava/java_swift/Sources/JavaMap.swift /Users/user/SwiftJava/java_swift/Sources/JNICore.swift /Users/user/SwiftJava/java_swift/Sources/JNIObject.swift /Users/user/SwiftJava/java_swift/Sources/JavaClass.swift /Users/user/SwiftJava/java_swift/Sources/JavaObject.swift /Users/user/SwiftJava/java_swift/Sources/JNIField.swift /Users/user/SwiftJava/java_swift/Sources/JNIMethod.swift /Users/user/SwiftJava/java_swift/Sources/JNIType.swift /Users/user/SwiftJava/java_swift/Sources/JavaSet.swift /Users/user/SwiftJava/java_swift/Sources/JavaEnum.swift /Users/user/SwiftJava/java_swift/Sources/Runnable.swift /Users/user/SwiftJava/java_swift/Sources/Throwable.swift /Users/user/SwiftJava/java_swift/Sources/HashMap.swift /Users/user/SwiftJava/java_swift/Sources/Exception.swift -target x86_64-apple-macosx10.10 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -I /tmp/Debug -F /tmp/Debug -enable-testing -g -import-underlying-module -D DEBUG -serialize-debugging-options -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/swift-overrides.hmap -Xcc -iquote -Xcc /tmp/java_swift.build/Debug/java_swift.build/java_swift-generated-files.hmap -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/java_swift-own-target-headers.hmap -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/java_swift-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /tmp/java_swift.build/all-product-headers.yaml -Xcc -iquote -Xcc /tmp/java_swift.build/Debug/java_swift.build/java_swift-project-headers.hmap -Xcc -I/tmp/Debug/include -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/DerivedSources/x86_64 -Xcc -I/tmp/java_swift.build/Debug/java_swift.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -ivfsoverlay -Xcc /tmp/java_swift.build/Debug/java_swift.build/unextended-module-overlay.yaml -Xcc -working-directory/Users/user/SwiftJava/java_swift -emit-module-doc-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap~partial.swiftdoc -serialize-diagnostics-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap.dia -Onone -module-name java_swift -emit-module-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap~partial.swiftmodule -emit-dependencies-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap.d -emit-reference-dependencies-path /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap.swiftdeps -o /tmp/java_swift.build/Debug/java_swift.build/Objects-normal/x86_64/JavaMap.o
